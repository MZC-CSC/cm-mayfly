replicaCount: 1

image:
  repository: redis
  pullPolicy: IfNotPresent
  tag: "7.2-alpine"

imagePullSecrets: []
nameOverride: "airflow-redis"
fullnameOverride: "airflow-redis"

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

service:
  type: ClusterIP
  port: 6379
  targetPort: 6379

resources:
  requests:
    cpu: 100m
    memory: 128Mi

livenessProbe:
  exec:
    command:
      - redis-cli
      - ping
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 3
    
readinessProbe:
  exec:
    command:
      - redis-cli
      - ping
  initialDelaySeconds: 10
  periodSeconds: 10
  timeoutSeconds: 3

volumes: []
  # - name: airflow-redis-volume
  #   persistentVolumeClaim:
  #     claimName: airflow-redis

volumeMounts: []
  # - name: airflow-redis-volume
  #   mountPath: /data

persistence:
  enabled: false
  storageClass: "manual"
  accessMode: ReadWriteOnce
  size: 1Gi
  hostPath: /tmp/cloud-migrator/cm-cicada/airflow/redis

env: []

command:
  - redis-server
args: 
  - --requirepass
  - airflow_pass
  - --port
  - "6379"

##########################################################
podAnnotations: {}
podLabels: {}

podSecurityContext: {}

securityContext: {}

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
