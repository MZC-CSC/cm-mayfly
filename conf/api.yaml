cliSpecVersion: v1
# Service Definitions (Framework Server Basic informations)
services:
  cb-spider: #service name
    version: 0.10.0
    baseurl: http://localhost:1024/spider  # baseurl is Scheme + Host + Base Path
    auth: #If you need an authentication method, describe the type and username and password in the sub
      type: basic
      username: 
      password: 
  
  cb-tumblebug:
    version: 0.10.0
    baseurl: http://localhost:1323/tumblebug
    auth: 
      type: basic
      username: default
      password: default

  cm-beetle:
    version: 0.3.0
    baseurl: http://localhost:8056/beetle
    auth: 
      type: basic
      username: default
      password: default

  cm-ant:
    version: 0.3.0
    baseurl: http://localhost:8880/ant
    auth:  

  cm-honeybee:
    version: 0.3.0
    baseurl: http://localhost:8081/honeybee
    auth: 

  cm-cicada:
    version: 0.3.0
    baseurl: http://localhost:8083/cicada
    auth: 

  cm-grasshopper:
    version: 0.3.0
    baseurl: http://localhost:8084/grasshopper
    auth: 

  cm-damselfly:
    version: 0.3.0
    baseurl: http://localhost:8088/damselfly
    auth:
      type: basic
      username: default
      password: default

  cm-butterfly-api:
    version: 0.3.0
    baseurl: http://localhost:4000
    auth: 

  # sample: #none authentication method
  #   baseurl: http://localhost:1323/test
  #   auth: #none

  # sample: #basic authentication method
  #   baseurl: http://localhost:1323/test
  #   auth: 
  #     type: "basic"
  #     username: "your-username"
  #     password: "your-password"

  # sample: #Bearer authentication method
  #   baseurl: http://localhost:1323/test
  #   auth: 
  #     type: "bearer"
  #     token: "your-bearer-token-here"


# Define rest api actions for each of the services defined above.
# specify the DATA to use for the API in the CLI.
serviceActions:
  # sample: #for sample
  #   #cb-spider CCIM v0.6.0
  #   NormalGetAction:
  #     method: get
  #     resourcePath: /sample
  #     description: #Use when necessary for user understanding
  #   PathParamGetAction:
  #     method: get
  #     resourcePath: /sample/{param_name}
  cb-spider: #service name
    Get-Driver:
      method: get
      resourcePath: /driver/{DriverName}
      description: "Retrieve details of a specific Cloud Driver."
    Unregister-Driver:
      method: delete
      resourcePath: /driver/{DriverName}
      description: "Unregister a specific Cloud Driver."
    List-Myimage:
      method: get
      resourcePath: /myimage
      description: "Retrieve a list of MyImages associated with a specific connection."
    Snapshot-Vm:
      method: post
      resourcePath: /myimage
      description: "Create a new MyImage snapshot from a specified VM. üï∑Ô∏è [[Concept Guide](https://github.com/cloud-barista/cb-spider/wiki/MyImage-and-Driver-API)], [[Snapshot-MyImage,Disk Guide](https://github.com/cloud-barista/cb-spider/wiki/VM-Snapshot,-MyImage-and-Disk-Overview)]"
    Unregister-Subnet:
      method: delete
      resourcePath: /regsubnet/{Name}
      description: "Unregister a Subnet from a specified VPC."
    Unregister-Nlb:
      method: delete
      resourcePath: /regnlb/{Name}
      description: "Unregister a Network Load Balancer (NLB) with the specified name."
    List-Vm-Status:
      method: get
      resourcePath: /vmstatus
      description: "Retrieve a list of statuses for Virtual Machines (VMs) associated with a specific connection."
    Any-Call:
      method: post
      resourcePath: /anycall
      description: "Execute a custom function (FID) with key-value parameters through AnyCall. üï∑Ô∏è [[Development Guide](https://github.com/cloud-barista/cb-spider/wiki/AnyCall-API-Extension-Guide)]"
    Get-Cluster:
      method: get
      resourcePath: /cluster/{Name}
      description: "Retrieve details of a specific Cluster."
    Delete-Cluster:
      method: delete
      resourcePath: /cluster/{Name}
      description: "Delete a specified Cluster."
    Count-All-Keypair:
      method: get
      resourcePath: /countkeypair
      description: "Get the total number of KeyPairs across all connections."
    Upload-Driver:
      method: post
      resourcePath: /driver/upload
      description: "Upload a Cloud Driver library file."
    Add-Subnet:
      method: post
      resourcePath: /vpc/{VPCName}/subnet
      description: "Add a new Subnet to an existing VPC."
    List-Cluster:
      method: get
      resourcePath: /cluster
      description: "Retrieve a list of Clusters associated with a specific connection."
    Create-Cluster:
      method: post
      resourcePath: /cluster
      description: "Create a new Cluster with specified configurations. üï∑Ô∏è [[Concept Guide](https://github.com/cloud-barista/cb-spider/wiki/Provider-Managed-Kubernetes-and-Driver-API)] <br> * NodeGroupList is optional, depends on CSP type: <br> &nbsp;- Type-I (e.g., Tencent, Alibaba): requires separate Node Group addition after Cluster creation. <br> &nbsp;- Type-II (e.g., Azure, NHN): mandates at least one Node Group during initial Cluster creation."
    Register-Cluster:
      method: post
      resourcePath: /regcluster
      description: "Register a new Cluster with the specified VPC and CSP ID."
    Add-Rule:
      method: post
      resourcePath: /securitygroup/{SGName}/rules
      description: "Add new rules to a Security Group."
    Remove-Rule:
      method: delete
      resourcePath: /securitygroup/{SGName}/rules
      description: "Remove existing rules from a Security Group."
    List-Vm-Spec:
      method: get
      resourcePath: /vmspec
      description: "Retrieve a list of VM specs associated with a specific connection. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/features-and-usages#2-vm-spec-%EC%A0%95%EB%B3%B4-%EC%A0%9C%EA%B3%B5)]"
    Check-Udp-Port:
      method: get
      resourcePath: /check/udp
      description: "Verifies whether a given UDP port is open on the specified host.\n‚Äª Note: As UDP is connectionless, this check mainly performs a lookup and may not confirm if the server is working."
    Add-Nodegroup:
      method: post
      resourcePath: /cluster/{Name}/nodegroup
      description: "Add a new Node Group to an existing Cluster."
    Count-Vm-By-Connection:
      method: get
      resourcePath: /countvm/{ConnectionName}
      description: "Get the total number of Virtual Machines (VMs) for a specific connection."
    Register-Nlb:
      method: post
      resourcePath: /regnlb
      description: "Register a new Network Load Balancer (NLB) with the specified name and CSP ID."
    Register-Vm:
      method: post
      resourcePath: /regvm
      description: "Register a new Virtual Machine (VM) with the specified name and CSP ID."
    List-Org-Vm-Spec:
      method: get
      resourcePath: /vmorgspec
      description: "Retrieve a list of Original VM Specs associated with a specific connection. <br> The response structure may vary depending on the request ConnectionName."
    List-All-Cluster:
      method: get
      resourcePath: /allcluster
      description: "Retrieve a comprehensive list of all Clusters associated with a specific connection, <br> including those mapped between CB-Spider and the CSP, <br> only registered in CB-Spider's metadata, <br> and only existing in the CSP."
    Add-Nlb-Vm:
      method: post
      resourcePath: /nlb/{Name}/vms
      description: "Add a new set of VMs to an existing Network Load Balancer (NLB)."
    Remove-Nlb-Vm:
      method: delete
      resourcePath: /nlb/{Name}/vms
      description: "Remove a set of VMs from an existing Network Load Balancer (NLB)."
    Unregister-Cluster:
      method: delete
      resourcePath: /regcluster/{Name}
      description: "Unregister a Cluster with the specified name."
    Count-All-Vpc:
      method: get
      resourcePath: /countvpc
      description: "Get the total number of VPCs across all connections."
    List-Vm:
      method: get
      resourcePath: /vm
      description: "Retrieve a list of Virtual Machines (VMs) associated with a specific connection."
    Start-Vm:
      method: post
      resourcePath: /vm
      description: "Start a new Virtual Machine (VM) with specified configurations. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/features-and-usages#2-%EB%A9%80%ED%8B%B0%ED%81%B4%EB%9D%BC%EC%9A%B0%EB%93%9C-vm-%EC%9D%B8%ED%94%84%EB%9D%BC-%EC%9E%90%EC%9B%90-%EC%A0%9C%EC%96%B4multi-cloud-vm-infra-resource-control)], [[Snapshot-MyImage,Disk Guide](https://github.com/cloud-barista/cb-spider/wiki/VM-Snapshot,-MyImage-and-Disk-Overview)]"
    Increase-Disk-Size:
      method: put
      resourcePath: /disk/{Name}/size
      description: "Increase the size of an existing disk."
    Get-Sg-Owner-Vpc:
      method: post
      resourcePath: /getsecuritygroupowner
      description: "Retrieve the owner VPC of a specified Security Group."
    List-Keypair:
      method: get
      resourcePath: /keypair
      description: "Retrieve a list of KeyPairs associated with a specific connection."
    Create-Keypair:
      method: post
      resourcePath: /keypair
      description: "Create a new KeyPair with the specified configurations. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/features-and-usages#5-vm-keypair-%EC%83%9D%EC%84%B1-%EB%B0%8F-%EC%A0%9C%EC%96%B4)]"
    List-Disk:
      method: get
      resourcePath: /disk
      description: "Retrieve a list of Disks associated with a specific connection."
    Create-Disk:
      method: post
      resourcePath: /disk
      description: "Create a new Disk with the specified configuration. üï∑Ô∏è [[Concept Guide](https://github.com/cloud-barista/cb-spider/wiki/Disk-and-Driver-API)], [[Snapshot-MyImage,Disk Guide](https://github.com/cloud-barista/cb-spider/wiki/VM-Snapshot,-MyImage-and-Disk-Overview)]"
    List-Org-Region:
      method: get
      resourcePath: /orgregion
      description: "Retrieve a list of Original Regions associated with a specific connection. <br> The response structure may vary depending on the request ConnectionName."
    Count-All-Cluster:
      method: get
      resourcePath: /countcluster
      description: "Get the total number of Clusters across all connections."
    Count-All-Myimage:
      method: get
      resourcePath: /countmyimage
      description: "Get the total number of MyImages across all connections."
    Delete-Csp-Vpc:
      method: delete
      resourcePath: /cspvpc/{Id}
      description: "Delete a specified CSP Virtual Private Cloud (VPC)."
    Delete-Csp-Securitygroup:
      method: delete
      resourcePath: /cspsecuritygroup/{Id}
      description: "Delete a specified CSP Security Group."
    Destroy-All-Resource:
      method: delete
      resourcePath: /destroy
      description: "Deletes all resources associated with a specific cloud connection. This action is irreversible."
    Get-Region-Zone:
      method: get
      resourcePath: /regionzone/{Name}
      description: "Retrieve details of a specific Region Zone. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/REST-API-Region-Zone-Information-Guide)]"
    Upgrade-Cluster:
      method: put
      resourcePath: /cluster/{Name}/upgrade
      description: "Upgrade a Cluster to a specified version."
    Register-Vpc:
      method: post
      resourcePath: /regvpc
      description: "Register a new Virtual Private Cloud (VPC) with the specified name and CSP ID."
    Count-All-Securitygroup:
      method: get
      resourcePath: /countsecuritygroup
      description: "Get the total number of Security Groups across all connections."
    List-Preconfigured-Original-Org-Region:
      method: get
      resourcePath: /preconfig/orgregion
      description: "Retrieve a list of pre-configured Original Regions based on driver and credential names. <br> The response structure may vary depending on the request DriverName and CredentialName."
    Get-Region:
      method: get
      resourcePath: /region/{RegionName}
      description: "Retrieve details of a specific Region."
    Unregister-Region:
      method: delete
      resourcePath: /region/{RegionName}
      description: "Unregister a specific Region."
    Terminate-Csp-Vm:
      method: delete
      resourcePath: /cspvm/{Id}
      description: "Terminate a specified CSP Virtual Machine (VM)."
    Get-Csp-Vm:
      method: get
      resourcePath: /cspvm/{Id}
      description: "Retrieve details of a specific CSP Virtual Machine (VM)."
    Get-Region-Zone-Preconfig:
      method: get
      resourcePath: /preconfig/regionzone/{Name}
      description: "Retrieve details of a specific pre-configured Region Zone based on driver and credential names. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/REST-API-Region-Zone-Information-Guide)]"
    Health-Check-Readyz:
      method: get
      resourcePath: /readyz
      description: "Checks the health of CB-Spider service and its dependencies via /readyz endpoint. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/Readiness-Check-Guide)]"
    Get-Image:
      method: get
      resourcePath: /vmimage/{Name}
      description: "Retrieve details of a specific Public Image. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/How-to-get-Image-List-with-REST-API)]"
    Check-Tcp-Port:
      method: get
      resourcePath: /check/tcp
      description: "Verifies whether a given TCP port is open on the specified host."
    Count-Disk-By-Connection:
      method: get
      resourcePath: /countdisk/{ConnectionName}
      description: "Get the total number of Disks for a specific connection."
    Count-All-Subnet:
      method: get
      resourcePath: /countsubnet
      description: "Get the total number of Subnets across all connections."
    List-Nlb:
      method: get
      resourcePath: /nlb
      description: "Retrieve a list of Network Load Balancers (NLBs) associated with a specific connection."
    Create-Nlb:
      method: post
      resourcePath: /nlb
      description: "Create a new Network Load Balancer (NLB) with specified configurations. üï∑Ô∏è [[Concept Guide](https://github.com/cloud-barista/cb-spider/wiki/Network-Load-Balancer-and-Driver-API)]"
    Unregister-Securitygroup:
      method: delete
      resourcePath: /regsecuritygroup/{Name}
      description: "Unregister a Security Group with the specified name."
    Register-Subnet:
      method: post
      resourcePath: /regsubnet
      description: "Register a new Subnet within a specified VPC."
    List-All-Vm:
      method: get
      resourcePath: /allvm
      description: "Retrieve a comprehensive list of all Virtual Machines (VMs) associated with a specific connection, <br> including those mapped between CB-Spider and the CSP, <br> only registered in CB-Spider's metadata, <br> and only existing in the CSP."
    Count-Keypair-By-Connection:
      method: get
      resourcePath: /countkeypair/{ConnectionName}
      description: "Get the total number of KeyPairs for a specific connection."
    Get-Disk:
      method: get
      resourcePath: /disk/{Name}
      description: "Retrieve details of a specific Disk."
    Delete-Disk:
      method: delete
      resourcePath: /disk/{Name}
      description: "Delete a specified Disk."
    Count-All-Vm:
      method: get
      resourcePath: /countvm
      description: "Get the total number of Virtual Machines (VMs) across all connections."
    Get-Credential:
      method: get
      resourcePath: /credential/{CredentialName}
      description: "Retrieve details of a specific Credential."
    Unregister-Credential:
      method: delete
      resourcePath: /credential/{CredentialName}
      description: "Unregister a specific Credential."
    Register-Disk:
      method: post
      resourcePath: /regdisk
      description: "Register a new Disk with the specified name, zone, and CSP ID."
    Get-Vm-Status:
      method: get
      resourcePath: /vmstatus/{Name}
      description: "Retrieve the status of a specific Virtual Machine (VM)."
    List-Connection-Config:
      method: get
      resourcePath: /connectionconfig
      description: "Retrieve a list of registered Connection Configs."
    Create-Connection-Config:
      method: post
      resourcePath: /connectionconfig
      description: "Create a new Connection Config. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/features-and-usages#4-cloud-connection-configuration-%EC%A0%95%EB%B3%B4-%EB%93%B1%EB%A1%9D-%EB%B0%8F-%EA%B4%80%EB%A6%AC)]"
    Attach-Disk:
      method: put
      resourcePath: /disk/{Name}/attach
      description: "Attach an existing Disk to a VM."
    Get-Price-Info:
      method: post
      resourcePath: /priceinfo/{ProductFamily}/{RegionName}
      description: 'Retrieve price details of a specific Product Family in a specific Region. üï∑Ô∏è [[Concept Guide](https://github.com/cloud-barista/cb-spider/wiki/Price-Info-and-Cloud-Driver-API)], üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/RestAPI-Multi%E2%80%90Cloud-Price-Information-Guide)] <br> * example body: {"connectionName":"aws-connection","FilterList":[{"Key":"instanceType","Value":"t2.micro"}]}'
    Get-Nlb-Owner-Vpc:
      method: post
      resourcePath: /getnlbowner
      description: "Retrieve the owner VPC of a specified Network Load Balancer (NLB)."
    List-Product-Family:
      method: get
      resourcePath: /productfamily/{RegionName}
      description: "Retrieve a list of Product Families associated with a specific connection and region. üï∑Ô∏è [[Concept Guide](https://github.com/cloud-barista/cb-spider/wiki/Price-Info-and-Cloud-Driver-API)], üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/RestAPI-Multi%E2%80%90Cloud-Price-Information-Guide)]"
    Remove-Tag:
      method: delete
      resourcePath: /tag/{Key}
      description: "Remove a specific tag from a specified resource.\n‚Äª Resource types: VPC, SUBNET, SG, KEY, VM, NLB, DISK, MYIMAGE, CLUSTER"
    Get-Tag:
      method: get
      resourcePath: /tag/{Key}
      description: "Retrieve a specific tag for a specified resource.\n‚Äª Resource types: VPC, SUBNET, SG, KEY, VM, NLB, DISK, MYIMAGE, CLUSTER"
    Delete-Connection-Config:
      method: delete
      resourcePath: /connectionconfig/{ConfigName}
      description: "Delete a specific Connection Config."
    Get-Connection-Config:
      method: get
      resourcePath: /connectionconfig/{ConfigName}
      description: "Retrieve details of a specific Connection Config."
    Count-Myimage-By-Connection:
      method: get
      resourcePath: /countmyimage/{ConnectionName}
      description: "Get the total number of MyImages for a specific connection."
    List-Driver:
      method: get
      resourcePath: /driver
      description: "Retrieve a list of registered Cloud Drivers."
    Register-Driver:
      method: post
      resourcePath: /driver
      description: "Register a new Cloud Driver. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/features-and-usages#1-cloud-driver-%EC%A0%95%EB%B3%B4-%EB%93%B1%EB%A1%9D-%EB%B0%8F-%EA%B4%80%EB%A6%AC)]"
    Get-Keypair:
      method: get
      resourcePath: /keypair/{Name}
      description: "Retrieve details of a specific KeyPair."
    Delete-Keypair:
      method: delete
      resourcePath: /keypair/{Name}
      description: "Delete a specified KeyPair."
    List-Securitygroup:
      method: get
      resourcePath: /securitygroup
      description: "Retrieve a list of Security Groups associated with a specific connection."
    Create-Securitygroup:
      method: post
      resourcePath: /securitygroup
      description: "Create a new Security Group with specified rules and tags. üï∑Ô∏è [[Concept Guide](https://github.com/cloud-barista/cb-spider/wiki/Security-Group-Rules-and-Driver-API)], üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/features-and-usages#4-securitygroup-%EC%83%9D%EC%84%B1-%EB%B0%8F-%EC%A0%9C%EC%96%B4)]"
    Get-Securitygroup:
      method: get
      resourcePath: /securitygroup/{Name}
      description: "Retrieve details of a specific Security Group."
    Delete-Securitygroup:
      method: delete
      resourcePath: /securitygroup/{Name}
      description: "Delete a specified Security Group."
    Count-Subnet-By-Connection:
      method: get
      resourcePath: /countsubnet/{ConnectionName}
      description: "Get the total number of Subnets for a specific connection."
    List-Credential:
      method: get
      resourcePath: /credential
      description: "Retrieve a list of registered Credentials."
    Register-Credential:
      method: post
      resourcePath: /credential
      description: "Register a new Credential. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/features-and-usages#2-cloud-credential-%EC%A0%95%EB%B3%B4-%EB%93%B1%EB%A1%9D-%EB%B0%8F-%EA%B4%80%EB%A6%AC)]"
    Health-Check-Health:
      method: get
      resourcePath: /health
      description: "Checks the health of CB-Spider service and its dependencies via /health endpoint. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/Readiness-Check-Guide)]"
    Get-Subnet:
      method: get
      resourcePath: /vpc/{VPCName}/subnet/{SubnetName}
      description: "Retrieve a specific Subnet from a VPC."
    Remove-Subnet:
      method: delete
      resourcePath: /vpc/{VPCName}/subnet/{SubnetName}
      description: "Remove an existing Subnet from a VPC."
    Get-Cluster-Owner-Vpc:
      method: post
      resourcePath: /getclusterowner
      description: "Retrieve the owner VPC of a specified Cluster."
    Unregister-Disk:
      method: delete
      resourcePath: /regdisk/{Name}
      description: "Unregister a Disk with the specified name."
    Register-Securitygroup:
      method: post
      resourcePath: /regsecuritygroup
      description: "Register a new Security Group with the specified name and CSP ID."
    List-All-Myimage:
      method: get
      resourcePath: /allmyimage
      description: "Retrieve a comprehensive list of all MyImages associated with a specific connection, <br> including those mapped between CB-Spider and the CSP, <br> only registered in CB-Spider's metadata, <br> and only existing in the CSP."
    Health-Check-Healthcheck:
      method: get
      resourcePath: /healthcheck
      description: "Checks the health of CB-Spider service and its dependencies via /healthcheck endpoint. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/Readiness-Check-Guide)]"
    Count-Securitygroup-By-Connection:
      method: get
      resourcePath: /countsecuritygroup/{ConnectionName}
      description: "Get the total number of Security Groups for a specific connection."
    Remove-Csp-Subnet:
      method: delete
      resourcePath: /vpc/{VPCName}/cspsubnet/{Id}
      description: "Remove an existing CSP Subnet from a VPC."
    Get-Nlb:
      method: get
      resourcePath: /nlb/{Name}
      description: "Retrieve details of a specific Network Load Balancer (NLB)."
    Delete-Nlb:
      method: delete
      resourcePath: /nlb/{Name}
      description: "Delete a specified Network Load Balancer (NLB)."
    List-Region-Zone-Preconfig:
      method: get
      resourcePath: /preconfig/regionzone
      description: "Retrieve a list of pre-configured Region Zones based on driver and credential names. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/REST-API-Region-Zone-Information-Guide)]"
    Set-Nodegroup-Autoscaling:
      method: put
      resourcePath: /cluster/{Name}/nodegroup/{NodeGroupName}/onautoscaling
      description: "Enable or disable auto scaling for a Node Group in a Cluster."
    Count-Nlb-By-Connection:
      method: get
      resourcePath: /countnlb/{ConnectionName}
      description: "Get the total number of Network Load Balancers (NLBs) for a specific connection."
    Get-Vm-Using-Rs:
      method: post
      resourcePath: /getvmusingresources
      description: "Retrieve details of a VM using resource ID."
    Get-Cloudos-Metainfo:
      method: get
      resourcePath: /cloudos/metainfo/{CloudOSName}
      description: "Retrieve metadata information for a specific Cloud OS."
    Delete-Csp-Keypair:
      method: delete
      resourcePath: /cspkeypair/{Id}
      description: "Delete a specified CSP KeyPair."
    Unregister-Keypair:
      method: delete
      resourcePath: /regkeypair/{Name}
      description: "Unregister a KeyPair with the specified name."
    Detach-Disk:
      method: put
      resourcePath: /disk/{Name}/detach
      description: "Detach an existing Disk from a VM."
    List-Region:
      method: get
      resourcePath: /region
      description: "Retrieve a list of registered Regions."
    Register-Region:
      method: post
      resourcePath: /region
      description: "Register a new Region. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/features-and-usages#3-cloud-regionzone-%EC%A0%95%EB%B3%B4-%EB%93%B1%EB%A1%9D-%EB%B0%8F-%EA%B4%80%EB%A6%AC)]"
    Unregister-Vm:
      method: delete
      resourcePath: /regvm/{Name}
      description: "Unregister a Virtual Machine (VM) with the specified name."
    Unregister-Vpc:
      method: delete
      resourcePath: /regvpc/{Name}
      description: "Unregister a VPC with the specified name."
    Get-Org-Vm-Spec:
      method: get
      resourcePath: /vmorgspec/{Name}
      description: "Retrieve details of a specific Original VM Spec."
    Count-Cluster-By-Connection:
      method: get
      resourcePath: /countcluster/{ConnectionName}
      description: "Get the total number of Clusters for a specific connection."
    Count-Connection-By-Provider:
      method: get
      resourcePath: /countconnectionconfig/{ProviderName}
      description: "Get the total number of connections for a specific provider."
    Delete-Csp-Cluster:
      method: delete
      resourcePath: /cspcluster/{Id}
      description: "Delete a specified CSP Cluster."
    Count-Vpc-By-Connection:
      method: get
      resourcePath: /countvpc/{ConnectionName}
      description: "Get the total number of VPCs for a specific connection."
    Get-Myimage:
      method: get
      resourcePath: /myimage/{Name}
      description: "Retrieve details of a specific MyImage."
    Delete-Myimage:
      method: delete
      resourcePath: /myimage/{Name}
      description: "Delete a specified MyImage."
    Get-Vmgroup-Healthinfo:
      method: get
      resourcePath: /nlb/{Name}/health
      description: "Retrieve the health information of the VM group in a specified Network Load Balancer (NLB)."
    List-All-Securitygroup:
      method: get
      resourcePath: /allsecuritygroup
      description: "Retrieve a comprehensive list of all Security Groups associated with a specific connection, <br> including those mapped between CB-Spider and the CSP, <br> only registered in CB-Spider's metadata, <br> and only existing in the CSP."
    Control-Vm:
      method: put
      resourcePath: /controlvm/{Name}
      description: "Control the state of a Virtual Machine (VM) such as suspend, resume, or reboot."
    Count-All-Disk:
      method: get
      resourcePath: /countdisk
      description: "Get the total number of Disks across all connections."
    Delete-Csp-Nlb:
      method: delete
      resourcePath: /cspnlb/{Id}
      description: "Delete a specified CSP Network Load Balancer (NLB)."
    Health-Check-Ping:
      method: get
      resourcePath: /ping
      description: "Checks the health of CB-Spider service and its dependencies via /ping endpoint. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/Readiness-Check-Guide)]"
    Register-Myimage:
      method: post
      resourcePath: /regmyimage
      description: "Register a new MyImage with the specified name and CSP ID."
    List-Vpc:
      method: get
      resourcePath: /vpc
      description: "Retrieve a list of Virtual Private Clouds (VPCs) associated with a specific connection."
    Create-Vpc:
      method: post
      resourcePath: /vpc
      description: "Create a new Virtual Private Cloud (VPC) with specified subnet configurations. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/features-and-usages#3-vpcsubnet-%EC%83%9D%EC%84%B1-%EB%B0%8F-%EC%A0%9C%EC%96%B4)]"
    List-All-Nlb:
      method: get
      resourcePath: /allnlb
      description: "Retrieve a comprehensive list of all Network Load Balancers (NLBs) associated with a specific connection, <br> including those mapped between CB-Spider and the CSP, <br> only registered in CB-Spider's metadata, <br> and only existing in the CSP."
    Change-Nodegroup-Scaling:
      method: put
      resourcePath: /cluster/{Name}/nodegroup/{NodeGroupName}/autoscalesize
      description: "Change the scaling settings for a Node Group in a Cluster."
    Count-All-Nlb:
      method: get
      resourcePath: /countnlb
      description: "Get the total number of Network Load Balancers (NLBs) across all connections."
    List-Tag:
      method: get
      resourcePath: /tag
      description: "Retrieve a list of tags for a specified resource.\n‚Äª Resource types: VPC, SUBNET, SG, KEY, VM, NLB, DISK, MYIMAGE, CLUSTER"
    Add-Tag:
      method: post
      resourcePath: /tag
      description: "Add a tag to a specified resource.\n‚Äª Resource types: VPC, SUBNET, SG, KEY, VM, NLB, DISK, MYIMAGE, CLUSTER"
    Get-Vm:
      method: get
      resourcePath: /vm/{Name}
      description: "Retrieve details of a specific Virtual Machine (VM)."
    Terminate-Vm:
      method: delete
      resourcePath: /vm/{Name}
      description: "Terminate a specified Virtual Machine (VM)."
    Get-Vpc:
      method: get
      resourcePath: /vpc/{Name}
      description: "Retrieve details of a specific Virtual Private Cloud (VPC)."
    Delete-Vpc:
      method: delete
      resourcePath: /vpc/{Name}
      description: "Delete a specified Virtual Private Cloud (VPC)."
    Remove-Nodegroup:
      method: delete
      resourcePath: /cluster/{Name}/nodegroup/{NodeGroupName}
      description: "Remove an existing Node Group from a Cluster."
    Delete-Csp-Disk:
      method: delete
      resourcePath: /cspdisk/{Id}
      description: "Delete a specified CSP Disk."
    Register-Keypair:
      method: post
      resourcePath: /regkeypair
      description: "Register a new KeyPair with the specified name and CSP ID."
    List-All-Disk:
      method: get
      resourcePath: /alldisk
      description: "Retrieve a comprehensive list of all Disks associated with a specific connection, <br> including those mapped between CB-Spider and the CSP, <br> only registered in CB-Spider's metadata, <br> and only existing in the CSP."
    Count-All-Connection:
      method: get
      resourcePath: /countconnectionconfig
      description: "Get the total number of connections."
    Unregister-Myimage:
      method: delete
      resourcePath: /regmyimage/{Name}
      description: "Unregister a MyImage with the specified name."
    List-Image:
      method: get
      resourcePath: /vmimage
      description: "Retrieve a list of Public Images associated with a specific connection. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/How-to-get-Image-List-with-REST-API)]"
    Get-Vm-Spec:
      method: get
      resourcePath: /vmspec/{Name}
      description: "Retrieve details of a specific VM spec. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/features-and-usages#2-vm-spec-%EC%A0%95%EB%B3%B4-%EC%A0%9C%EA%B3%B5)]"
    List-Cloudos:
      method: get
      resourcePath: /cloudos
      description: "Retrieve a list of supported Cloud OS."
    List-Org-Zone:
      method: get
      resourcePath: /orgzone
      description: "Retrieve a list of Original Zones associated with a specific connection. <br> The response structure may vary depending on the request ConnectionName."
    List-Region-Zone:
      method: get
      resourcePath: /regionzone
      description: "Retrieve a list of Region Zones associated with a specific connection. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/REST-API-Region-Zone-Information-Guide)]"
    List-All-Vpc:
      method: get
      resourcePath: /allvpc
      description: "Retrieve a comprehensive list of all Virtual Private Clouds (VPCs) associated with a specific connection, <br> including those mapped between CB-Spider and the CSP, <br> only registered in CB-Spider's metadata, <br> and only existing in the CSP."
    List-All-Keypair:
      method: get
      resourcePath: /allkeypair
      description: "Retrieve a comprehensive list of all KeyPairs associated with a specific connection, <br> including those mapped between CB-Spider and the CSP, <br> only registered in CB-Spider's metadata, <br> and only existing in the CSP."
    Delete-Csp-Myimage:
      method: delete
      resourcePath: /cspmyimage/{Id}
      description: "Delete a specified CSP MyImage."

  cb-tumblebug:
    Putchangek8snodegroupautoscalesize:
      method: put
      resourcePath: /ns/{nsId}/k8scluster/{k8sClusterId}/k8snodegroup/{k8sNodeGroupName}/autoscalesize
      description: "Change a K8sNodeGroup's Autoscale Size"
    Getnlb:
      method: get
      resourcePath: /ns/{nsId}/mci/{mciId}/nlb/{nlbId}
      description: "Get NLB"
    Delnlb:
      method: delete
      resourcePath: /ns/{nsId}/mci/{mciId}/nlb/{nlbId}
      description: "Delete NLB"
    Putsshkey:
      method: put
      resourcePath: /ns/{nsId}/resources/sshKey/{sshKeyId}
      description: "Update SSH Key"
    Delsshkey:
      method: delete
      resourcePath: /ns/{nsId}/resources/sshKey/{sshKeyId}
      description: "Delete SSH Key"
    Getsshkey:
      method: get
      resourcePath: /ns/{nsId}/resources/sshKey/{sshKeyId}
      description: "Get SSH Key"
    Lookupimage:
      method: post
      resourcePath: /lookupImage
      description: "Lookup image"
    Getnlbhealth:
      method: get
      resourcePath: /ns/{nsId}/mci/{mciId}/nlb/{nlbId}/healthz
      description: "Get NLB Health"
    Postmcipolicy:
      method: post
      resourcePath: /ns/{nsId}/policy/mci/{mciId}
      description: "Create MCI Automation policy"
    Delmcipolicy:
      method: delete
      resourcePath: /ns/{nsId}/policy/mci/{mciId}
      description: "Delete MCI Policy"
    Getmcipolicy:
      method: get
      resourcePath: /ns/{nsId}/policy/mci/{mciId}
      description: "Get MCI Policy"
    Postregistersubnet:
      method: post
      resourcePath: /ns/{nsId}/registerCspResource/vNet/{vNetId}/subnet
      description: "Register Subnet, which was created in CSP"
    Postfirewallrules:
      method: post
      resourcePath: /ns/{nsId}/resources/securityGroup/{securityGroupId}/rules
      description: "Create FirewallRules"
    Delfirewallrules:
      method: delete
      resourcePath: /ns/{nsId}/resources/securityGroup/{securityGroupId}/rules
      description: "Delete FirewallRules"
    Registercspnativeresourcesall:
      method: post
      resourcePath: /registerCspResourcesAll
      description: "Register CSP Native Resources (vNet, securityGroup, sshKey, vm) from all Clouds to CB-Tumblebug"
    Inspectresourcesoverview:
      method: get
      resourcePath: /inspectResourcesOverview
      description: "Inspect Resources Overview (vNet, securityGroup, sshKey, vm) registered in CB-Tumblebug and CSP for all connections"
    Putupgradek8scluster:
      method: put
      resourcePath: /ns/{nsId}/k8scluster/{k8sClusterId}/upgrade
      description: "Upgrade a K8sCluster's version"
    Getsitetositevpn:
      method: get
      resourcePath: /ns/{nsId}/mci/{mciId}/vpn/{vpnId}
      description: "Get resource info of a site-to-site VPN (Currently, GCP-AWS is supported)"
    Postinstallmonitoragenttomci:
      method: post
      resourcePath: /ns/{nsId}/monitoring/install/mci/{mciId}
      description: "Install monitoring agent (CB-Dragonfly agent) to MCI"
    Putmonitoragentstatusinstalled:
      method: put
      resourcePath: /ns/{nsId}/monitoring/status/mci/{mciId}/vm/{vmId}
      description: "Set monitoring agent (CB-Dragonfly agent) installation status installed (for Windows VM only)"
    Getvnet:
      method: get
      resourcePath: /ns/{nsId}/resources/vNet/{vNetId}
      description: "Get VNet"
    Delvnet:
      method: delete
      resourcePath: /ns/{nsId}/resources/vNet/{vNetId}
      description: "Delete VNet\n- withsubnets: delete VNet and its subnets\n- refine: delete information of VNet and its subnets if there's no info/resource in Spider/CSP\n- force: delete VNet and its subnets regardless of the status of info/resource in Spider/CSP"
    Removelabel:
      method: delete
      resourcePath: /label/{labelType}/{uid}/{key}
      description: "Remove a label from a resource identified by its uid"
    Deletederegistersubnet:
      method: delete
      resourcePath: /ns/{nsId}/deregisterCspResource/vNet/{vNetId}/subnet/{subnetId}
      description: "Deregister Subnet, which was created in CSP"
    Postsystemmci:
      method: post
      resourcePath: /systemMci
      description: "Create System MCI Dynamically for Special Purpose"
    Getk8sclusterinfo:
      method: get
      resourcePath: /k8sClusterInfo
      description: "Get kubernetes cluster information"
    Deletek8snodegroup:
      method: delete
      resourcePath: /ns/{nsId}/k8scluster/{k8sClusterId}/k8snodegroup/{k8sNodeGroupName}
      description: "Remove a K8sNodeGroup"
    Getmci:
      method: get
      resourcePath: /ns/{nsId}/mci/{mciId}
      description: "Get MCI object (option: status, accessInfo, vmId)"
    Delmci:
      method: delete
      resourcePath: /ns/{nsId}/mci/{mciId}
      description: "Delete MCI"
    Searchimage:
      method: post
      resourcePath: /ns/{nsId}/resources/searchImage
      description: "Search image"
    Getallsecuritygroup:
      method: get
      resourcePath: /ns/{nsId}/resources/securityGroup
      description: "List all Security Groups or Security Groups' ID"
    Postsecuritygroup:
      method: post
      resourcePath: /ns/{nsId}/resources/securityGroup
      description: "Create Security Group"
    Delallsecuritygroup:
      method: delete
      resourcePath: /ns/{nsId}/resources/securityGroup
      description: "Delete all Security Groups"
    Postinstallbenchmarkagenttomci:
      method: post
      resourcePath: /ns/{nsId}/installBenchmarkAgent/mci/{mciId}
      description: "Install the benchmark agent to specified MCI"
    Lookupspeclist:
      method: post
      resourcePath: /lookupSpecs
      description: "Lookup spec list"
    Postmcivm:
      method: post
      resourcePath: /ns/{nsId}/mci/{mciId}/vm
      description: "Create and add homogeneous VMs(subGroup) to a specified MCI (Set subGroupSize for multiple VMs)"
    Getallcustomimage:
      method: get
      resourcePath: /ns/{nsId}/resources/customImage
      description: "List all customImages or customImages' ID"
    Postcustomimage:
      method: post
      resourcePath: /ns/{nsId}/resources/customImage
      description: "Register existing Custom Image in a CSP (option=register)"
    Delallcustomimage:
      method: delete
      resourcePath: /ns/{nsId}/resources/customImage
      description: "Delete all customImages"
    Createsharedresource:
      method: post
      resourcePath: /ns/{nsId}/sharedResource
      description: "Create shared resources for MC-Infra"
    Deleteobjects:
      method: delete
      resourcePath: /objects
      description: "Delete child objects along with the given object"
    Getobjects:
      method: get
      resourcePath: /objects
      description: "List all objects for a given key"
    Checknodegroupsonk8screation:
      method: get
      resourcePath: /checkNodeGroupsOnK8sCreation
      description: "Check whether nodegroups are required during the k8scluster creation"
    Postmcivmsnapshot:
      method: post
      resourcePath: /ns/{nsId}/mci/{mciId}/vm/{vmId}/snapshot
      description: "Snapshot VM and create a Custom Image Object using the Snapshot"
    Getcustomimage:
      method: get
      resourcePath: /ns/{nsId}/resources/customImage/{customImageId}
      description: "Get customImage"
    Delcustomimage:
      method: delete
      resourcePath: /ns/{nsId}/resources/customImage/{customImageId}
      description: "Delete customImage"
    Getrequest:
      method: get
      resourcePath: /request/{reqId}
      description: "Get details of a specific request"
    Deleterequest:
      method: delete
      resourcePath: /request/{reqId}
      description: "Delete details of a specific request"
    Getbenchmark:
      method: post
      resourcePath: /ns/{nsId}/benchmark/mci/{mciId}
      description: "Run MCI benchmark for a single performance metric and return results"
    Registercredential:
      method: post
      resourcePath: /credential
      description: "This API registers credential information using hybrid encryption. The process involves compressing and encrypting sensitive data with AES-256, encrypting the AES key with a 4096-bit RSA public key (retrieved via `GET /credential/publicKey`), and using OAEP padding with SHA-256. All values, including the AES key, must be base64 encoded before sending, and the public key token ID must be included in the request."
    Getspec:
      method: get
      resourcePath: /ns/{nsId}/resources/spec/{specId}
      description: "Get spec"
    Putspec:
      method: put
      resourcePath: /ns/{nsId}/resources/spec/{specId}
      description: "Update spec"
    Delspec:
      method: delete
      resourcePath: /ns/{nsId}/resources/spec/{specId}
      description: "Delete spec"
    Postfiletomci:
      method: post
      resourcePath: /ns/{nsId}/transferFile/mci/{mciId}
      description: "Transfer a file to specified MCI to the specified path.\nThe file size should be less than 10MB.\nNot for gerneral file transfer but for specific purpose (small configuration files)."
    Getconfig:
      method: get
      resourcePath: /config/{configId}
      description: "Get config"
    Initconfig:
      method: delete
      resourcePath: /config/{configId}
      description: "Init config"
    Getregion:
      method: get
      resourcePath: /provider/{providerName}/region/{regionName}
      description: "Get registered region info"
    Getlatencybenchmark:
      method: get
      resourcePath: /ns/{nsId}/benchmarkLatency/mci/{mciId}
      description: "Run MCI benchmark for network latency"
    Getmcigroupvms:
      method: get
      resourcePath: /ns/{nsId}/mci/{mciId}/subgroup/{subgroupId}
      description: "List VMs with a SubGroup label in a specified MCI"
    Postmcisubgroupscaleout:
      method: post
      resourcePath: /ns/{nsId}/mci/{mciId}/subgroup/{subgroupId}
      description: "ScaleOut subGroup in specified MCI"
    Getmcivm:
      method: get
      resourcePath: /ns/{nsId}/mci/{mciId}/vm/{vmId}
      description: "Get VM in specified MCI"
    Delmcivm:
      method: delete
      resourcePath: /ns/{nsId}/mci/{mciId}/vm/{vmId}
      description: "Delete VM in specified MCI"
    Filterspecsbyrange:
      method: post
      resourcePath: /ns/{nsId}/resources/filterSpecsByRange
      description: "Filter specs by range"
    Postutiltodesignvnet:
      method: post
      resourcePath: /util/vNet/design
      description: "Design VNet and subnets based on user-friendly properties"
    Forwardanyreqtoany:
      method: post
      resourcePath: /forward/{path}
      description: "Forward any (GET) request to CB-Spider"
    Postk8snodegroup:
      method: post
      resourcePath: /ns/{nsId}/k8scluster/{k8sClusterId}/k8snodegroup
      description: "Add a K8sNodeGroup"
    Inspectresources:
      method: post
      resourcePath: /inspectResources
      description: "Inspect Resources (vNet, securityGroup, sshKey, vm) registered in CB-Tumblebug, CB-Spider, CSP"
    Getallconfig:
      method: get
      resourcePath: /config
      description: "List all configs"
    Postconfig:
      method: post
      resourcePath: /config
      description: "Create or Update config (TB_SPIDER_REST_URL, TB_DRAGONFLY_REST_URL, ...)"
    Initallconfig:
      method: delete
      resourcePath: /config
      description: "Init all configs"
    Getcontrolmci:
      method: get
      resourcePath: /ns/{nsId}/control/mci/{mciId}
      description: "Control the lifecycle of MCI (refine, suspend, resume, reboot, terminate)"
    Delallsshkey:
      method: delete
      resourcePath: /ns/{nsId}/resources/sshKey
      description: "Delete all SSH Keys"
    Getallsshkey:
      method: get
      resourcePath: /ns/{nsId}/resources/sshKey
      description: "List all SSH Keys or SSH Keys' ID"
    Postsshkey:
      method: post
      resourcePath: /ns/{nsId}/resources/sshKey
      description: "Create SSH Key"
    Getavailablek8sclusterversion:
      method: get
      resourcePath: /availableK8sClusterVersion
      description: "Get available kubernetes cluster version"
    Getallmcipolicy:
      method: get
      resourcePath: /ns/{nsId}/policy/mci
      description: "List all MCI policies"
    Delallmcipolicy:
      method: delete
      resourcePath: /ns/{nsId}/policy/mci
      description: "Delete all MCI policies"
    Postutiltovalidatenetwork:
      method: post
      resourcePath: /util/net/validate
      description: "Validate a hierarchical configuration of a VPC network or multi-cloud network consisting of multiple VPC networks"
    Getbastionnodes:
      method: get
      resourcePath: /ns/{nsId}/mci/{mciId}/vm/{targetVmId}/bastion
      description: "Get bastion nodes for a VM"
    Getproviderlist:
      method: get
      resourcePath: /provider
      description: "List all registered Providers"
    Getallbenchmark:
      method: post
      resourcePath: /ns/{nsId}/benchmarkAll/mci/{mciId}
      description: "Run MCI benchmark for all performance metrics and return results"
    Getallk8scluster:
      method: get
      resourcePath: /ns/{nsId}/k8scluster
      description: "List all K8sClusters or K8sClusters' ID"
    Postk8scluster:
      method: post
      resourcePath: /ns/{nsId}/k8scluster
      description: "Create K8sCluster<br>Find details from https://github.com/cloud-barista/cb-tumblebug/discussions/1614"
    Deleteallk8scluster:
      method: delete
      resourcePath: /ns/{nsId}/k8scluster
      description: "Delete all K8sClusters"
    Getsitesinmci:
      method: get
      resourcePath: /ns/{nsId}/mci/{mciId}/site
      description: "Get sites in MCI"
    Getmonitordata:
      method: get
      resourcePath: /ns/{nsId}/monitoring/mci/{mciId}/metric/{metric}
      description: "Get monitoring data of specified MCI for specified monitoring metric (cpu, memory, disk, network)"
    Postmcidynamiccheckrequest:
      method: post
      resourcePath: /mciDynamicCheckRequest
      description: "Check available ConnectionConfig list before create MCI Dynamically from common spec and image"
    Getconnconfig:
      method: get
      resourcePath: /connConfig/{connConfigName}
      description: "Get registered ConnConfig info"
    Getpublickeyforcredentialencryption:
      method: get
      resourcePath: /credential/publicKey
      description: "Generates an RSA key pair using a 4096-bit key size with the RSA algorithm. The public key is generated using the RSA algorithm with OAEP padding and SHA-256 as the hash function. This key is used to encrypt an AES key that will be used for hybrid encryption of credentials."
    Getallmci:
      method: get
      resourcePath: /ns/{nsId}/mci
      description: "List all MCIs or MCIs' ID"
    Postmci:
      method: post
      resourcePath: /ns/{nsId}/mci
      description: "Create MCI"
    Delallmci:
      method: delete
      resourcePath: /ns/{nsId}/mci
      description: "Delete all MCIs"
    Getallnlb:
      method: get
      resourcePath: /ns/{nsId}/mci/{mciId}/nlb
      description: "List all NLBs or NLBs' ID"
    Postnlb:
      method: post
      resourcePath: /ns/{nsId}/mci/{mciId}/nlb
      description: "Create NLB"
    Delallnlb:
      method: delete
      resourcePath: /ns/{nsId}/mci/{mciId}/nlb
      description: "Delete all NLBs"
    Registercspnativeresources:
      method: post
      resourcePath: /registerCspResources
      description: "Register CSP Native Resources (vNet, securityGroup, sshKey, vm) to CB-Tumblebug"
    Testjwtauth:
      method: get
      resourcePath: /auth/test
      description: "Test JWT authentication"
    Deletederegistervnet:
      method: delete
      resourcePath: /ns/{nsId}/deregisterCspResource/vNet/{vNetId}
      description: "Deregister the VNet, which was created in CSP"
    Delallimage:
      method: delete
      resourcePath: /ns/{nsId}/resources/image
      description: "Delete all images"
    Getallimage:
      method: get
      resourcePath: /ns/{nsId}/resources/image
      description: "List all images or images' ID"
    Postimage:
      method: post
      resourcePath: /ns/{nsId}/resources/image
      description: "Register image"
    Getallsubnet:
      method: get
      resourcePath: /ns/{nsId}/resources/vNet/{vNetId}/subnet
      description: "List all subnets"
    Postsubnet:
      method: post
      resourcePath: /ns/{nsId}/resources/vNet/{vNetId}/subnet
      description: "Create Subnet"
    Delallsharedresources:
      method: delete
      resourcePath: /ns/{nsId}/sharedResources
      description: "Delete all Default Resource Objects in the given namespace"
    Retrieveregionlistfromcsp:
      method: get
      resourcePath: /regionFromCsp
      description: "RetrieveR all region lists from CSPs"
    Getcontrolmcivm:
      method: get
      resourcePath: /ns/{nsId}/control/mci/{mciId}/vm/{vmId}
      description: "Control the lifecycle of VM (suspend, resume, reboot, terminate)"
    Putsitetositevpn:
      method: put
      resourcePath: /stream-response/ns/{nsId}/mci/{mciId}/vpn/{vpnId}
      description: "(To be provided) Update a site-to-site VPN"
    Postsitetositevpn:
      method: post
      resourcePath: /stream-response/ns/{nsId}/mci/{mciId}/vpn/{vpnId}
      description: "Create a site-to-site VPN (Currently, GCP-AWS is supported)"
    Deletesitetositevpn:
      method: delete
      resourcePath: /stream-response/ns/{nsId}/mci/{mciId}/vpn/{vpnId}
      description: "Delete a site-to-site VPN (Currently, GCP-AWS is supported)"
    Postteststreamresponse:
      method: post
      resourcePath: /testStreamResponse
      description: "Receives a number and streams the decrementing number every second until zero"
    Getcloudinfo:
      method: get
      resourcePath: /cloudInfo
      description: "Get cloud information"
    Putsetk8snodegroupautoscaling:
      method: put
      resourcePath: /ns/{nsId}/k8scluster/{k8sClusterId}/k8snodegroup/{k8sNodeGroupName}/onautoscaling
      description: "Set a K8sNodeGroup's Autoscaling On/Off"
    Checkhttpversion:
      method: get
      resourcePath: /httpVersion
      description: "Checks and logs the HTTP version of the incoming request to the server console."
    Postregistercspnativevm:
      method: post
      resourcePath: /ns/{nsId}/registerCspVm
      description: "Register existing VM in a CSP to Cloud-Barista MCI"
    Getregions:
      method: get
      resourcePath: /provider/{providerName}/region
      description: "Get registered region info"
    Getconnconfiglist:
      method: get
      resourcePath: /connConfig
      description: "List all registered ConnConfig"
    Fetchspecs:
      method: post
      resourcePath: /ns/{nsId}/resources/fetchSpecs
      description: "Fetch specs"
    Postregistervnet:
      method: post
      resourcePath: /ns/{nsId}/registerCspResource/vNet
      description: "Register the VNet, which was created in CSP"
    Recommendvm:
      method: post
      resourcePath: /mciRecommendVm
      description: "Recommend MCI plan (filter and priority) Find details from https://github.com/cloud-barista/cb-tumblebug/discussions/1234"
    Getns:
      method: get
      resourcePath: /ns/{nsId}
      description: "Get namespace"
    Putns:
      method: put
      resourcePath: /ns/{nsId}
      description: "Update namespace"
    Delns:
      method: delete
      resourcePath: /ns/{nsId}
      description: "Delete namespace"
    Addnlbvms:
      method: post
      resourcePath: /ns/{nsId}/mci/{mciId}/nlb/{nlbId}/vm
      description: "Add VMs to NLB"
    Removenlbvms:
      method: delete
      resourcePath: /ns/{nsId}/mci/{mciId}/nlb/{nlbId}/vm
      description: "Delete VMs from NLB"
    Getmcigroupids:
      method: get
      resourcePath: /ns/{nsId}/mci/{mciId}/subgroup
      description: "List SubGroup IDs in a specified MCI"
    Setbastionnodes:
      method: put
      resourcePath: /ns/{nsId}/mci/{mciId}/vm/{targetVmId}/bastion/{bastionVmId}
      description: "Set bastion nodes for a VM"
    Postmcidynamic:
      method: post
      resourcePath: /ns/{nsId}/mciDynamic
      description: "Create MCI Dynamically from common spec and image"
    Putdatadisk:
      method: put
      resourcePath: /ns/{nsId}/resources/dataDisk/{dataDiskId}
      description: "Upsize Data Disk"
    Deldatadisk:
      method: delete
      resourcePath: /ns/{nsId}/resources/dataDisk/{dataDiskId}
      description: "Delete Data Disk"
    Getdatadisk:
      method: get
      resourcePath: /ns/{nsId}/resources/dataDisk/{dataDiskId}
      description: "Get Data Disk"
    Postspec:
      method: post
      resourcePath: /ns/{nsId}/resources/spec
      description: "Register spec"
    Getavailablek8sclusternodeimage:
      method: get
      resourcePath: /availableK8sClusterNodeImage
      description: "(UNDER DEVELOPMENT!!!) Get available kubernetes cluster node image"
    Delallvnet:
      method: delete
      resourcePath: /ns/{nsId}/resources/vNet
      description: "Delete all VNets"
    Getallvnet:
      method: get
      resourcePath: /ns/{nsId}/resources/vNet
      description: "List all VNets or VNets' ID"
    Postvnet:
      method: post
      resourcePath: /ns/{nsId}/resources/vNet
      description: "Create a new VNet"
    Getsecuritygroup:
      method: get
      resourcePath: /ns/{nsId}/resources/securityGroup/{securityGroupId}
      description: "Get Security Group"
    Delsecuritygroup:
      method: delete
      resourcePath: /ns/{nsId}/resources/securityGroup/{securityGroupId}
      description: "Delete Security Group"
    Lookupspec:
      method: post
      resourcePath: /lookupSpec
      description: "Lookup spec"
    Getrequeststatusofsitetositevpn:
      method: get
      resourcePath: /ns/{nsId}/mci/{mciId}/vpn/{vpnId}/request/{requestId}
      description: "Check the status of a specific request by its ID"
    Lookupimagelist:
      method: post
      resourcePath: /lookupImages
      description: "Lookup image list"
    Getsystemlabelinfo:
      method: get
      resourcePath: /labelInfo
      description: "Return LabelTypes and system defined label keys with example"
    Fetchimages:
      method: post
      resourcePath: /ns/{nsId}/resources/fetchImages
      description: "Fetch images"
    Getimage:
      method: get
      resourcePath: /ns/{nsId}/resources/image/{imageId}
      description: "GetImage returns an image object if there are matched images for the given namespace and imageKey(Id, CspResourceName, GuestOS,...)"
    Putimage:
      method: put
      resourcePath: /ns/{nsId}/resources/image/{imageId}
      description: "Update image"
    Delimage:
      method: delete
      resourcePath: /ns/{nsId}/resources/image/{imageId}
      description: "Delete image"
    Postutiltodesignnetwork:
      method: post
      resourcePath: /util/net/design
      description: "Design a hierarchical network configuration of a VPC network or multi-cloud network consisting of multiple VPC networks"
    Removebastionnodes:
      method: delete
      resourcePath: /ns/{nsId}/mci/{mciId}/bastion/{bastionVmId}
      description: "Remove a bastion VM from all vNets"
    Delalldatadisk:
      method: delete
      resourcePath: /ns/{nsId}/resources/dataDisk
      description: "Delete all Data Disks"
    Getalldatadisk:
      method: get
      resourcePath: /ns/{nsId}/resources/dataDisk
      description: "List all Data Disks or Data Disks' ID"
    Postdatadisk:
      method: post
      resourcePath: /ns/{nsId}/resources/dataDisk
      description: "Create Data Disk"
    Loadassets:
      method: get
      resourcePath: /loadAssets
      description: "Load Common Resources from internal asset files (Spec, Image)"
    Checkresource:
      method: get
      resourcePath: /ns/{nsId}/checkResource/{resourceType}/{resourceId}
      description: "Check resources' existence"
    Postcmdmci:
      method: post
      resourcePath: /ns/{nsId}/cmd/mci/{mciId}
      description: "Send a command to specified MCI"
    Getk8scluster:
      method: get
      resourcePath: /ns/{nsId}/k8scluster/{k8sClusterId}
      description: "Get K8sCluster"
    Deletek8scluster:
      method: delete
      resourcePath: /ns/{nsId}/k8scluster/{k8sClusterId}
      description: "Delete K8sCluster"
    Postmcnlb:
      method: post
      resourcePath: /ns/{nsId}/mci/{mciId}/mcSwNlb
      description: "Create a special purpose MCI for NLB and depoly and setting SW NLB"
    Getvmdatadisk:
      method: get
      resourcePath: /ns/{nsId}/mci/{mciId}/vm/{vmId}/dataDisk
      description: "Get available dataDisks for a VM"
    Putvmdatadisk:
      method: put
      resourcePath: /ns/{nsId}/mci/{mciId}/vm/{vmId}/dataDisk
      description: "Attach/Detach available dataDisk"
    Postvmdatadisk:
      method: post
      resourcePath: /ns/{nsId}/mci/{mciId}/vm/{vmId}/dataDisk
      description: "Provisioning (Create and attach) dataDisk"
    Getsubnet:
      method: get
      resourcePath: /ns/{nsId}/resources/vNet/{vNetId}/subnet/{subnetId}
      description: "Get Subnet"
    Delsubnet:
      method: delete
      resourcePath: /ns/{nsId}/resources/vNet/{vNetId}/subnet/{subnetId}
      description: "Delete Subnet\n- refine: delete information of subnet if there's no info/resource in Spider/CSP\n- force: delete subnet regardless of the status of info/resource in Spider/CSP"
    Getresourcesbylabelselector:
      method: get
      resourcePath: /resources/{labelType}
      description: "Get resources based on a label selector. The label selector supports the following operators:\n- `=` : Selects resources where the label key equals the specified value (e.g., `env=production`).\n- `!=` : Selects resources where the label key does not equal the specified value (e.g., `tier!=frontend`).\n- `in` : Selects resources where the label key is in the specified set of values (e.g., `region in (us-west, us-east)`).\n- `notin` : Selects resources where the label key is not in the specified set of values (e.g., `env notin (production, staging)`).\n- `exists` : Selects resources where the label key exists (e.g., `env exists`).\n- `!exists` : Selects resources where the label key does not exist (e.g., `env !exists`)."
    Getallns:
      method: get
      resourcePath: /ns
      description: "List all namespaces or namespaces' ID"
    Postns:
      method: post
      resourcePath: /ns
      description: "Create namespace"
    Delallns:
      method: delete
      resourcePath: /ns
      description: "Delete all namespaces"
    Postmcivmdynamic:
      method: post
      resourcePath: /ns/{nsId}/mci/{mciId}/vmDynamic
      description: "Create VM Dynamically and add it to MCI"
    Getobject:
      method: get
      resourcePath: /object
      description: "Get value of an object"
    Deleteobject:
      method: delete
      resourcePath: /object
      description: "Delete an object"
    Getreadyz:
      method: get
      resourcePath: /readyz
      description: "Check Tumblebug is ready"
    Getallrequests:
      method: get
      resourcePath: /requests
      description: "Get details of all requests with optional filters."
    Deleteallrequests:
      method: delete
      resourcePath: /requests
      description: "Delete details of all requests"
    Getlabels:
      method: get
      resourcePath: /label/{labelType}/{uid}
      description: "Get labels for a resource identified by its uid"
    Createorupdatelabel:
      method: put
      resourcePath: /label/{labelType}/{uid}
      description: "Create or update a label for a resource identified by its uid"

  cm-beetle:
    Deleteuser:
      method: delete
      resourcePath: /sample/users/{id}
      description: "Delete a user with the given information."
    Patchuser:
      method: patch
      resourcePath: /sample/users/{id}
      description: "Patch a user with the given information."
    Getuser:
      method: get
      resourcePath: /sample/users/{id}
      description: "Get information of a user with a specific ID."
    Updateuser:
      method: put
      resourcePath: /sample/users/{id}
      description: "Update a user with the given information."
    Testtracing:
      method: get
      resourcePath: /test/tracing
      description: "Test tracing to Tumblebug"
    Checkhttpversion:
      method: get
      resourcePath: /httpVersion
      description: "Checks and logs the HTTP version of the incoming request to the server console."
    Listinfra:
      method: get
      resourcePath: /migration/ns/{nsId}/mci
      description: "Get the migrated multi-cloud infrastructure (MCI)"
    Migrateinfra:
      method: post
      resourcePath: /migration/ns/{nsId}/mci
      description: "Migrate an infrastructure to the multi-cloud infrastructure (MCI)"
    Getinfra:
      method: get
      resourcePath: /migration/ns/{nsId}/mci/{mciId}
      description: "Get the migrated multi-cloud infrastructure (MCI)"
    Deleteinfra:
      method: delete
      resourcePath: /migration/ns/{nsId}/mci/{mciId}
      description: "Delete the migrated mult-cloud infrastructure (MCI)"
    Getreadyz:
      method: get
      resourcePath: /readyz
      description: "Check Beetle is ready"
    Recommendinfra:
      method: post
      resourcePath: /recommendation/mci
      description: "Recommend an appropriate multi-cloud infrastructure (MCI) for cloud migration\n\n[Note] `desiredProvider` and `desiredRegion` are required.\n- `desiredProvider` and `desiredRegion` can set on the query parameter or the request body.\n\n- If desiredProvider and desiredRegion are set on request body, the values in the query parameter will be ignored."
    Getusers:
      method: get
      resourcePath: /sample/users
      description: "Get information of all users."
    Createuser:
      method: post
      resourcePath: /sample/users
      description: "Create a new user with the given information."


  cm-ant:
    Getloadtestexecutionstate:
      method: get
      resourcePath: /api/v1/load/tests/state/{loadTestKey}
      description: "Retrieve a load test execution state by load test key."
    Installloadgenerator:
      method: post
      resourcePath: /api/v1/load/generators
      description: "Install a load generator either locally or remotely."
    Getallloadgeneratorinstallinfo:
      method: get
      resourcePath: /api/v1/load/generators
      description: "Retrieve a list of all installed load generators with pagination support."
    Getallmonitoringagentinfos:
      method: get
      resourcePath: /api/v1/load/monitoring/agent
      description: "Retrieve monitoring agent information based on specified criteria."
    Getallloadtestexecutioninfos:
      method: get
      resourcePath: /api/v1/load/tests/infos
      description: "Retrieve a list of all load test execution information with pagination support."
    Getloadtestmetrics:
      method: get
      resourcePath: /api/v1/load/tests/result/metrics
      description: "Retrieve load test metrics based on provided parameters."
    Getallloadtestexecutionstate:
      method: get
      resourcePath: /api/v1/load/tests/state
      description: "Retrieve a list of all load test execution states with pagination support."
    Uninstallmonitoringagent:
      method: post
      resourcePath: /api/v1/load/monitoring/agent/uninstall
      description: "Uninstall monitoring agents from specified VMs or all VMs in an mci."
    Getloadtestresult:
      method: get
      resourcePath: /api/v1/load/tests/result
      description: "Retrieve load test result based on provided parameters."
    Getlastloadtestresult:
      method: get
      resourcePath: /api/v1/load/tests/result/last
      description: "Retrieve last load test result based on provided parameters."
    Getlastloadtestmetrics:
      method: get
      resourcePath: /api/v1/load/tests/result/metrics/last
      description: "Retrieve last load test metrics based on provided parameters."
    Stoploadtest:
      method: post
      resourcePath: /api/v1/load/tests/stop
      description: "Stop a running load test using the provided load test key."
    Antserverreadiness:
      method: get
      resourcePath: /readyz
      description: "This endpoint checks if the CB-Ant API server is ready by verifying the status of both the load service and the cost service. If either service is unavailable, it returns a 503 status indicating the server is not ready."
    Updateestimateforecastcostraw:
      method: post
      resourcePath: /api/v1/cost/estimate/forecast/raw
      description: "Update and retrieve raw forecasted cost estimates for specified cost resources and additional AWS information over the past 14 days."
    Uninstallloadgenerator:
      method: delete
      resourcePath: /api/v1/load/generators/{loadGeneratorInstallInfoId}
      description: "Uninstall a previously installed load generator."
    Getloadtestexecutioninfo:
      method: get
      resourcePath: /api/v1/load/tests/infos/{loadTestKey}
      description: "Retrieve the load test execution state information for a specific load test key."
    Runloadtest:
      method: post
      resourcePath: /api/v1/load/tests/run
      description: "Start a load test using the provided load test configuration."
    Getlastloadtestexecutionstate:
      method: get
      resourcePath: /api/v1/load/tests/state/last
      description: "Retrieve a last load test execution state by given ids."
    Getestimatecost:
      method: get
      resourcePath: /api/v1/cost/estimate
      description: "Fetch estimated cost details based on provider, region, instance type, and resource specifications. Pagination support is provided through `Page` and `Size` parameters."
    Updateandgetestimatecost:
      method: post
      resourcePath: /api/v1/cost/estimate
      description: "Update the estimate cost based on provided specifications and retrieve the updated cost estimation. Required fields for each specification include `ProviderName`, `RegionName`, and `InstanceType`. Specifications can also be provided in a formatted string using `+` delimiter."
    Getestimateforecastcost:
      method: get
      resourcePath: /api/v1/cost/estimate/forecast
      description: "Fetch estimated forecast cost data based on specified parameters, including a date range that must be within 6 months. Supports pagination and filtering by namespace IDs, migration configuration IDs, and resource types."
    Updateestimateforecastcost:
      method: post
      resourcePath: /api/v1/cost/estimate/forecast
      description: "Update and retrieve forecasted cost estimates for a specified namespace and migration configuration ID over the past 14 days."
    Installmonitoringagent:
      method: post
      resourcePath: /api/v1/load/monitoring/agent/install
      description: "Install a monitoring agent on specific mci."

  cm-honeybee:
    Import-Helm:
      method: post
      resourcePath: /source_group/{sgId}/connection_info/{connId}/import/helm
      description: "Import the helm information."
    Get-Helm-Info-Source-Group:
      method: get
      resourcePath: /source_group/{sgId}/helm
      description: "Get the helm information for all connections in the source group."
    Get-Kubernetes-Info-Source-Group:
      method: get
      resourcePath: /source_group/{sgId}/kubernetes
      description: "Get the kubernetes information for all connections in the source group."
    Get-Connection-Info:
      method: get
      resourcePath: /source_group/{sgId}/connection_info/{connId}
      description: "Get the connection information."
    Update-Connection-Info:
      method: put
      resourcePath: /source_group/{sgId}/connection_info/{connId}
      description: "Update the connection information."
    Delete-Connection-Info:
      method: delete
      resourcePath: /source_group/{sgId}/connection_info/{connId}
      description: "Delete the connection information."
    Get-Helm-Info:
      method: get
      resourcePath: /source_group/{sgId}/connection_info/{connId}/helm
      description: "Get the helm information of the connection information."
    Import-Kubernetes:
      method: post
      resourcePath: /source_group/{sgId}/connection_info/{connId}/import/kubernetes
      description: "Import the kubernetes information."
    Get-Infra-Info:
      method: get
      resourcePath: /source_group/{sgId}/connection_info/{connId}/infra
      description: "Get the infra information of the connection information."
    Refresh-Connection-Info-Status:
      method: put
      resourcePath: /source_group/{sgId}/connection_info/{connId}/refresh
      description: "Refresh the connection info status."
    Get-Infra-Info-Source-Group-Refined:
      method: get
      resourcePath: /source_group/{sgId}/infra/refined
      description: "Get the refined infra information for all connections in the source group."
    Get-Software-Info-Source-Group:
      method: get
      resourcePath: /source_group/{sgId}/software
      description: "Get the software information for all connections in the source group."
    Get-Source-Group:
      method: get
      resourcePath: /source_group/{sgId}
      description: "Get the source group."
    Update-Source-Group:
      method: put
      resourcePath: /source_group/{sgId}
      description: "Update the source group."
    Delete-Source-Group:
      method: delete
      resourcePath: /source_group/{sgId}
      description: "Delete the source group."
    Import-Infra-Source-Group:
      method: post
      resourcePath: /source_group/{sgId}/import/infra
      description: "Import infra information for all connections in the source group."
    Get-Infra-Info-Source-Group:
      method: get
      resourcePath: /source_group/{sgId}/infra
      description: "Get the infra information for all connections in the source group."
    Get-Benchmark-Info:
      method: get
      resourcePath: /bench/{connId}
      description: "Get the benchmark information of the connection information."
    Register-Target-To-Source-Group:
      method: post
      resourcePath: /source_group/{sgId}/target
      description: "Register target information to the source group."
    Refresh-Source-Group-Connection-Info-Status:
      method: put
      resourcePath: /source_group/{sgId}/refresh
      description: "Refresh connection info status of the source group."
    Get-Software-Info:
      method: get
      resourcePath: /source_group/{sgId}/connection_info/{connId}/software
      description: "Get the software information of the connection information."
    Import-Kubernetes-Source-Group:
      method: post
      resourcePath: /source_group/{sgId}/import/kubernetes
      description: "Import kubernetes information for all connections in the source group."
    Health-Check-Readyz:
      method: get
      resourcePath: /readyz
      description: "Check Honeybee is ready"
    List-Connection-Info:
      method: get
      resourcePath: /source_group/{sgId}/connection_info
      description: "Get a list of connection information."
    Create-Connection-Info:
      method: post
      resourcePath: /source_group/{sgId}/connection_info
      description: "Create the connection information."
    Import-Software:
      method: post
      resourcePath: /source_group/{sgId}/connection_info/{connId}/import/software
      description: "Import the software information."
    Stop-Benchmark:
      method: post
      resourcePath: /bench/{connId}/stop
      description: "Stop the benchmark"
    Get-Infra-Info-Refined:
      method: get
      resourcePath: /source_group/{sgId}/connection_info/{connId}/infra/refined
      description: "Get the refined infra information of the connection information."
    Import-Software-Source-Group:
      method: post
      resourcePath: /source_group/{sgId}/import/software
      description: "Import software information for all connections in the source group."
    Import-Infra:
      method: post
      resourcePath: /source_group/{sgId}/connection_info/{connId}/import/infra
      description: "Import the infra information."
    Get-Connection-Info-Directly:
      method: get
      resourcePath: /connection_info/{connId}
      description: "Get the connection information directly."
    Refresh-Connection-Info-Status-Directly:
      method: put
      resourcePath: /connection_info/{connId}/refresh
      description: "Refresh the connection info status directly."
    List-Source-Group:
      method: get
      resourcePath: /source_group
      description: "Get a list of source group."
    Register-Source-Group:
      method: post
      resourcePath: /source_group
      description: "Register the source group."
    Get-Kubernetes-Info:
      method: get
      resourcePath: /source_group/{sgId}/connection_info/{connId}/kubernetes
      description: "Get the kubernetes information of the connection information."
    Import-Helm-Source-Group:
      method: post
      resourcePath: /source_group/{sgId}/import/helm
      description: "Import helm information for all connections in the source group."
    Run-Benchmark-Info:
      method: post
      resourcePath: /bench/{connId}/run
      description: "Run the benchmark information of the connection information. If no Benchmark Agent is present on the connected server, it will be automatically installed, and the benchmark will be executed."

  cm-cicada:
    Get-Task-Directly:
      method: get
      resourcePath: /task/{taskId}
      description: "Get the task directly."
    Get-Task-Component-By-Name:
      method: get
      resourcePath: /task_component/name/{tcName}
      description: "Get the task component by name."
    Get-Task-Component:
      method: get
      resourcePath: /task_component/{tcId}
      description: "Get the task component."
    Update-Task-Component:
      method: put
      resourcePath: /task_component/{tcId}
      description: "Update the task component."
    Delete-Task-Component:
      method: delete
      resourcePath: /task_component/{tcId}
      description: "Delete the task component."
    Get-Task-Logs:
      method: get
      resourcePath: /workflow/{wfId}/workflowRun/{wfRunId}/task/{taskId}/taskTryNum/{taskTyNum}/logs
      description: "Get the task Logs."
    List-Workflow-Template:
      method: get
      resourcePath: /workflow_template
      description: "Get a list of workflow template."
    Get-Import-Errors:
      method: get
      resourcePath: /importErrors
      description: "Get the importErrors."
    List-Workflow:
      method: get
      resourcePath: /workflow
      description: "Get a workflow list."
    Create-Workflow:
      method: post
      resourcePath: /workflow
      description: "Create a workflow."
    Get-Workflow-By-Name:
      method: get
      resourcePath: /workflow/name/{wfName}
      description: "Get the workflow by name."
    List-Task-From-Task-Group:
      method: get
      resourcePath: /workflow/{wfId}/task_group/{tgId}/task
      description: "Get a task list from the task group."
    Health-Check-Readyz:
      method: get
      resourcePath: /readyz
      description: "Check Cicada is ready"
    Get-Event-Logs:
      method: get
      resourcePath: /workflow/{wfId}/eventlogs
      description: "Get Eventlog."
    Get-Workflow-Runs:
      method: get
      resourcePath: /workflow/{wfId}/runs
      description: "Get the task Logs."
    Get-Workflowversion:
      method: get
      resourcePath: /workflow/{wfId}/version/{verId}
      description: "Get the WorkflowVersion."
    Get-Task-Instances:
      method: get
      resourcePath: /workflow/{wfId}/workflowRun/{wfRunId}/taskInstances
      description: "Get the task Logs."
    Get-Task-Group-Directly:
      method: get
      resourcePath: /task_group/{tgId}
      description: "Get the task group directly."
    List-Task:
      method: get
      resourcePath: /workflow/{wfId}/task
      description: "Get a task list of the workflow."
    Get-Task-Group:
      method: get
      resourcePath: /workflow/{wfId}/task_group/{tgId}
      description: "Get the task group."
    List-Workflowversion:
      method: get
      resourcePath: /workflow/{wfId}/version
      description: "Get a workflowVersion list."
    Get-Workflow-Template:
      method: get
      resourcePath: /workflow_template/{wftId}
      description: "Get the workflow template."
    List-Task-Component:
      method: get
      resourcePath: /task_component
      description: "Get a list of task component."
    Create-Task-Component:
      method: post
      resourcePath: /task_component
      description: "Register the task component."
    Get-Workflow:
      method: get
      resourcePath: /workflow/{wfId}
      description: "Get the workflow."
    Update-Workflow:
      method: put
      resourcePath: /workflow/{wfId}
      description: "Update the workflow content."
    Delete-Workflow:
      method: delete
      resourcePath: /workflow/{wfId}
      description: "Delete the workflow."
    Get-Workflow-Template-By-Name:
      method: get
      resourcePath: /workflow_template/name/{wfName}
      description: "Get the workflow template by name."
    Get-Task:
      method: get
      resourcePath: /workflow/{wfId}/task/{taskId}
      description: "Get the task."
    Get-Task-From-Task-Group:
      method: get
      resourcePath: /workflow/{wfId}/task_group/{tgId}/task/{taskId}
      description: "Get the task from the task group."
    Clear-Task-Instances:
      method: post
      resourcePath: /workflow/{wfId}/workflowRun/{wfRunId}/task/{taskId}/clear
      description: "Clear the task Instance."
    Run-Workflow:
      method: post
      resourcePath: /workflow/{wfId}/run
      description: "Run the workflow."
    List-Task-Group:
      method: get
      resourcePath: /workflow/{wfId}/task_group
      description: "Get a task group list of the workflow."

  cm-grasshopper:
    Get-Migration-List:
      method: get
      resourcePath: /software/migration_list/{sgId}
      description: "Get software migration list."
    Register-Software:
      method: post
      resourcePath: /software/register
      description: "Register the software."
    Health-Check-Readyz:
      method: get
      resourcePath: /readyz
      description: "Check Grasshopper is ready"
    List-Software:
      method: get
      resourcePath: /software
      description: "Get a list of connection information."
    Delete-Software:
      method: delete
      resourcePath: /software/{softwareId}
      description: "Delete the software."
    Migrate-Software:
      method: post
      resourcePath: /software/migrate
      description: "Migrate pieces of software to target."
    Get-Software-Migration-Log:
      method: get
      resourcePath: /software/migrate/log/{executionId}
      description: "Get the software migration log."

  cm-damselfly:
    GetUserModel:
      method: get
      resourcePath: /model/{isTargetModel}
      description: "Get a list of all user models."
    CreateOnpremmodel:
      method: post
      resourcePath: /onpremmodel
      description: "Create a new on-premise model with the given information."
    ListOnpremmodel:
      method: get
      resourcePath: /onpremmodel
      description: "Get a list of on-premise models."
    UpdateOnpremmodel:
      method: put
      resourcePath: /onpremmodel/{id}
      description: "Update a on-premise model with the given information."
    DeleteOnpremmodel:
      method: delete
      resourcePath: /onpremmodel/{id}
      description: "Delete a on-premise model with the given information."
    GetOnpremmodel:
      method: get
      resourcePath: /onpremmodel/{id}
      description: "Get a specific on-premise model."
    Readyz:
      method: get
      resourcePath: /readyz
      description: "Check Damselfly is ready"
    CreateCloudmodel:
      method: post
      resourcePath: /cloudmodel
      description: "Create a new cloud model with the given information."
    ListCloudmodel:
      method: get
      resourcePath: /cloudmodel
      description: "Get a list of cloud models."
    DeleteCloudmodel:
      method: delete
      resourcePath: /cloudmodel/{id}
      description: "Delete a cloud model with the given information."
    GetCloudmodel:
      method: get
      resourcePath: /cloudmodel/{id}
      description: "Get a specific cloud model."
    UpdateCloudmodel:
      method: put
      resourcePath: /cloudmodel/{id}
      description: "Update a cloud model with the given information."
    Httpversion:
      method: get
      resourcePath: /httpVersion
      description: "Checks and logs the HTTP version of the incoming request to the server console."
    ListModelVersion:
      method: get
      resourcePath: /model/version
      description: "Get the versions of all models(schemata of on-premise/cloud migration models)"
    GetSourceSoftwareModels:
      method: get
      resourcePath: /softwaremodel/source
      description: "Get a list of software user models."
    CreateSourceSoftwareModel:
      method: post
      resourcePath: /softwaremodel/source
      description: "Create a new software user model with the given information."
    GetSourceSoftwareModel:
      method: get
      resourcePath: /softwaremodel/source/{id}
      description: "Get a specific software user model."
    UpdateSourceSoftwareModel
      method: put
      resourcePath: /softwaremodel/source/{id}
      description: "Update a software user model with the given information."
    DeleteSourceSoftwareModel:
      method: delete
      resourcePath: /softwaremodel/source/{id}
      description: "Delete a software user model with the given information."

