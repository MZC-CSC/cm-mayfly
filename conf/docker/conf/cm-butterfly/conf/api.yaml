cliSpecVersion: v1
# Service Definitions (Framework Server Basic informations)
services:
  cb-spider: #service name
    version: 0.9.4
    baseurl: http://localhost:1024/spider  # baseurl is Scheme + Host + Base Path
    auth: #If you need an authentication method, describe the type and username and password in the sub
      type: basic
      username: 
      password: 
  
  cb-tumblebug:
    version: 0.9.11
    baseurl: http://localhost:1323/tumblebug
    auth: 
      type: basic
      username: default
      password: default

  cm-beetle:
    version: 0.2.1
    baseurl: http://localhost:8056/beetle
    auth: 

  cm-ant:
    version: 0.2.2
    baseurl: http://localhost:8880/ant
    auth:  

  cm-honeybee:
    version: main
    baseurl: http://localhost:8081/honeybee
    auth: 

  cm-cicada:
    version: main
    baseurl: http://localhost:8083/cicada
    auth: 

  cm-grasshopper:
    version: main
    baseurl: http://localhost:8084/grasshopper
    auth: 

  cm-butterfly:
    version: main
    baseurl: http://localhost:123/butterfly
    auth: 

  # sample: #none authentication method
  #   baseurl: http://localhost:1323/test
  #   auth: #none

  # sample: #basic authentication method
  #   baseurl: http://localhost:1323/test
  #   auth: 
  #     type: "basic"
  #     username: "your-username"
  #     password: "your-password"

  # sample: #Bearer authentication method
  #   baseurl: http://localhost:1323/test
  #   auth: 
  #     type: "bearer"
  #     token: "your-bearer-token-here"


# Define rest api actions for each of the services defined above.
# specify the DATA to use for the API in the CLI.
serviceActions:
  # sample: #for sample
  #   #cb-spider CCIM v0.6.0
  #   NormalGetAction:
  #     method: get
  #     resourcePath: /sample
  #     description: #Use when necessary for user understanding
  #   PathParamGetAction:
  #     method: get
  #     resourcePath: /sample/{param_name}
  cb-spider: #service name
    Get-Cluster-Owner-Vpc:
      method: post
      resourcePath: /getclusterowner
      description: "Retrieve the owner VPC of a specified Cluster."
    Unregister-Myimage:
      method: delete
      resourcePath: /regmyimage/{Name}
      description: "Unregister a MyImage with the specified name."
    List-Cluster:
      method: get
      resourcePath: /cluster
      description: "Retrieve a list of Clusters associated with a specific connection."
    Create-Cluster:
      method: post
      resourcePath: /cluster
      description: "Create a new Cluster with specified configurations. üï∑Ô∏è [[Concept Guide](https://github.com/cloud-barista/cb-spider/wiki/Provider-Managed-Kubernetes-and-Driver-API)] <br> * NodeGroupList is optional, depends on CSP type: <br> &nbsp;- Type-I (e.g., Tencent, Alibaba): requires separate Node Group addition after Cluster creation. <br> &nbsp;- Type-II (e.g., Azure, NHN): mandates at least one Node Group during initial Cluster creation."
    Count-Myimages-By-Connection:
      method: get
      resourcePath: /countmyimage/{ConnectionName}
      description: "Get the total number of MyImages for a specific connection."
    List-Vm:
      method: get
      resourcePath: /vm
      description: "Retrieve a list of Virtual Machines (VMs) associated with a specific connection."
    Start-Vm:
      method: post
      resourcePath: /vm
      description: "Start a new Virtual Machine (VM) with specified configurations. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/features-and-usages#2-%EB%A9%80%ED%8B%B0%ED%81%B4%EB%9D%BC%EC%9A%B0%EB%93%9C-vm-%EC%9D%B8%ED%94%84%EB%9D%BC-%EC%9E%90%EC%9B%90-%EC%A0%9C%EC%96%B4multi-cloud-vm-infra-resource-control)], [[Snapshot-MyImage,Disk Guide](https://github.com/cloud-barista/cb-spider/wiki/VM-Snapshot,-MyImage-and-Disk-Overview)]"
    Unregister-Key:
      method: delete
      resourcePath: /regkeypair/{Name}
      description: "Unregister a KeyPair with the specified name."
    Get-Vm:
      method: get
      resourcePath: /vm/{Name}
      description: "Retrieve details of a specific Virtual Machine (VM)."
    Terminate-Vm:
      method: delete
      resourcePath: /vm/{Name}
      description: "Terminate a specified Virtual Machine (VM)."
    List-All-Vpc:
      method: get
      resourcePath: /allvpc
      description: "Retrieve a comprehensive list of all Virtual Private Clouds (VPCs) associated with a specific connection, <br> including those mapped between CB-Spider and the CSP, <br> only registered in CB-Spider's metadata, <br> and only existing in the CSP."
    Get-Cloudos-Metainfo:
      method: get
      resourcePath: /cloudos/metainfo/{CloudOSName}
      description: "Retrieve metadata information for a specific Cloud OS."
    Get-Sg-Owner-Vpc:
      method: post
      resourcePath: /getsecuritygroupowner
      description: "Retrieve the owner VPC of a specified Security Group."
    Get-Vm-Spec:
      method: get
      resourcePath: /vmspec/{Name}
      description: "Retrieve details of a specific VM spec. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/features-and-usages#2-vm-spec-%EC%A0%95%EB%B3%B4-%EC%A0%9C%EA%B3%B5)]"
    Increase-Disk-Size:
      method: put
      resourcePath: /disk/{Name}/size
      description: "Increase the size of an existing disk."
    Get-Region:
      method: get
      resourcePath: /region/{RegionName}
      description: "Retrieve details of a specific Region."
    Unregister-Region:
      method: delete
      resourcePath: /region/{RegionName}
      description: "Unregister a specific Region."
    Register-Myimage:
      method: post
      resourcePath: /regmyimage
      description: "Register a new MyImage with the specified name and CSP ID."
    Unregister-Securitygroup:
      method: delete
      resourcePath: /regsecuritygroup/{Name}
      description: "Unregister a Security Group with the specified name."
    Register-Vm:
      method: post
      resourcePath: /regvm
      description: "Register a new Virtual Machine (VM) with the specified name and CSP ID."
    Add-Nodegroup:
      method: post
      resourcePath: /cluster/{Name}/nodegroup
      description: "Add a new Node Group to an existing Cluster."
    Count-All-Vms:
      method: get
      resourcePath: /countvm
      description: "Get the total number of Virtual Machines (VMs) across all connections."
    Add-Nlb-Vms:
      method: post
      resourcePath: /nlb/{Name}/vms
      description: "Add a new set of VMs to an existing Network Load Balancer (NLB)."
    Remove-Nlb-Vms:
      method: delete
      resourcePath: /nlb/{Name}/vms
      description: "Remove a set of VMs from an existing Network Load Balancer (NLB)."
    Health-Check-Readyz:
      method: get
      resourcePath: /readyz
      description: "Checks the health of CB-Spider service and its dependencies via /readyz endpoint. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/Readiness-Check-Guide)]"
    Remove-Nodegroup:
      method: delete
      resourcePath: /cluster/{Name}/nodegroup/{NodeGroupName}
      description: "Remove an existing Node Group from a Cluster."
    Delete-Disk:
      method: delete
      resourcePath: /disk/{Name}
      description: "Delete a specified Disk."
    Get-Disk:
      method: get
      resourcePath: /disk/{Name}
      description: "Retrieve details of a specific Disk."
    List-Vpc:
      method: get
      resourcePath: /vpc
      description: "Retrieve a list of Virtual Private Clouds (VPCs) associated with a specific connection."
    Create-Vpc:
      method: post
      resourcePath: /vpc
      description: "Create a new Virtual Private Cloud (VPC) with specified subnet configurations. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/features-and-usages#3-vpcsubnet-%EC%83%9D%EC%84%B1-%EB%B0%8F-%EC%A0%9C%EC%96%B4)]"
    Get-Vmgroup-Healthinfo:
      method: get
      resourcePath: /nlb/{Name}/health
      description: "Retrieve the health information of the VM group in a specified Network Load Balancer (NLB)."
    Get-Region-Zone:
      method: get
      resourcePath: /regionzone/{Name}
      description: "Retrieve details of a specific Region Zone. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/REST-API-Region-Zone-Information-Guide)]"
    Detach-Disk:
      method: put
      resourcePath: /disk/{Name}/detach
      description: "Detach an existing Disk from a VM."
    Register-Key:
      method: post
      resourcePath: /regkeypair
      description: "Register a new KeyPair with the specified name and CSP ID."
    List-Disk:
      method: get
      resourcePath: /disk
      description: "Retrieve a list of Disks associated with a specific connection."
    Create-Disk:
      method: post
      resourcePath: /disk
      description: "Create a new Disk with the specified configuration. üï∑Ô∏è [[Concept Guide](https://github.com/cloud-barista/cb-spider/wiki/Disk-and-Driver-API)], [[Snapshot-MyImage,Disk Guide](https://github.com/cloud-barista/cb-spider/wiki/VM-Snapshot,-MyImage-and-Disk-Overview)]"
    Get-Key:
      method: get
      resourcePath: /keypair/{Name}
      description: "Retrieve details of a specific KeyPair."
    Delete-Key:
      method: delete
      resourcePath: /keypair/{Name}
      description: "Delete a specified KeyPair."
    List-All-Cluster:
      method: get
      resourcePath: /allcluster
      description: "Retrieve a comprehensive list of all Clusters associated with a specific connection, <br> including those mapped between CB-Spider and the CSP, <br> only registered in CB-Spider's metadata, <br> and only existing in the CSP."
    Control-Vm:
      method: put
      resourcePath: /controlvm/{Name}
      description: "Control the state of a Virtual Machine (VM) such as suspend, resume, or reboot."
    Any-Call:
      method: post
      resourcePath: /anycall
      description: "Execute a custom function (FID) with key-value parameters through AnyCall. üï∑Ô∏è [[Development Guide](https://github.com/cloud-barista/cb-spider/wiki/AnyCall-API-Extension-Guide)]"
    Count-All-Keys:
      method: get
      resourcePath: /countkeypair
      description: "Get the total number of KeyPairs across all connections."
    Delete-Csp-Securitygroup:
      method: delete
      resourcePath: /cspsecuritygroup/{Id}
      description: "Delete a specified CSP Security Group."
    List-Org-Region:
      method: get
      resourcePath: /orgregion
      description: "Retrieve a list of Original Regions associated with a specific connection. <br> The response structure may vary depending on the request ConnectionName."
    List-Region-Zone-Preconfig:
      method: get
      resourcePath: /preconfig/regionzone
      description: "Retrieve a list of pre-configured Region Zones based on driver and credential names. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/REST-API-Region-Zone-Information-Guide)]"
    Unregister-Subnet:
      method: delete
      resourcePath: /regsubnet/{Name}
      description: "Unregister a Subnet from a specified VPC."
    List-All-Vm:
      method: get
      resourcePath: /allvm
      description: "Retrieve a comprehensive list of all Virtual Machines (VMs) associated with a specific connection, <br> including those mapped between CB-Spider and the CSP, <br> only registered in CB-Spider's metadata, <br> and only existing in the CSP."
    Count-All-Clusters:
      method: get
      resourcePath: /countcluster
      description: "Get the total number of Clusters across all connections."
    Count-Connections-By-Provider:
      method: get
      resourcePath: /countconnectionconfig/{ProviderName}
      description: "Get the total number of connections for a specific provider."
    List-Product-Family:
      method: get
      resourcePath: /productfamily/{RegionName}
      description: "Retrieve a list of Product Families associated with a specific connection and region. üï∑Ô∏è [[Concept Guide](https://github.com/cloud-barista/cb-spider/wiki/Price-Info-and-Cloud-Driver-API)], üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/RestAPI-Multi%E2%80%90Cloud-Price-Information-Guide)]"
    Upgrade-Cluster:
      method: put
      resourcePath: /cluster/{Name}/upgrade
      description: "Upgrade a Cluster to a specified version."
    List-Connection-Configs:
      method: get
      resourcePath: /connectionconfig
      description: "Retrieve a list of registered Connection Configs."
    Create-Connection-Config:
      method: post
      resourcePath: /connectionconfig
      description: "Create a new Connection Config. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/features-and-usages#4-cloud-connection-configuration-%EC%A0%95%EB%B3%B4-%EB%93%B1%EB%A1%9D-%EB%B0%8F-%EA%B4%80%EB%A6%AC)]"
    Get-Region-Zone-Preconfig:
      method: get
      resourcePath: /preconfig/regionzone/{Name}
      description: "Retrieve details of a specific pre-configured Region Zone based on driver and credential names. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/REST-API-Region-Zone-Information-Guide)]"
    Get-Price-Info:
      method: post
      resourcePath: /priceinfo/{ProductFamily}/{RegionName}
      description: "Retrieve price details of a specific Product Family in a specific Region. üï∑Ô∏è [[Concept Guide](https://github.com/cloud-barista/cb-spider/wiki/Price-Info-and-Cloud-Driver-API)], üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/RestAPI-Multi%E2%80%90Cloud-Price-Information-Guide)] <br> * example body: {\"connectionName\":\"aws-connection\",\"FilterList\":[{\"Key\":\"instanceType\",\"Value\":\"t2.micro\"}]}"
    Register-Nlb:
      method: post
      resourcePath: /regnlb
      description: "Register a new Network Load Balancer (NLB) with the specified name and CSP ID."
    Get-Org-Vm-Spec:
      method: get
      resourcePath: /vmorgspec/{Name}
      description: "Retrieve details of a specific Original VM Spec."
    Count-Disks-By-Connection:
      method: get
      resourcePath: /countdisk/{ConnectionName}
      description: "Get the total number of Disks for a specific connection."
    Attach-Disk:
      method: put
      resourcePath: /disk/{Name}/attach
      description: "Attach an existing Disk to a VM."
    Register-Vpc:
      method: post
      resourcePath: /regvpc
      description: "Register a new Virtual Private Cloud (VPC) with the specified name and CSP ID."
    List-Image:
      method: get
      resourcePath: /vmimage
      description: "Retrieve a list of Public Images associated with a specific connection. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/How-to-get-Image-List-with-REST-API)]"
    Set-Nodegroup-Autoscaling:
      method: put
      resourcePath: /cluster/{Name}/nodegroup/{NodeGroupName}/onautoscaling
      description: "Enable or disable auto scaling for a Node Group in a Cluster."
    Health-Check-Ping:
      method: get
      resourcePath: /ping
      description: "Checks the health of CB-Spider service and its dependencies via /ping endpoint. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/Readiness-Check-Guide)]"
    List-Cloud-Drivers:
      method: get
      resourcePath: /driver
      description: "Retrieve a list of registered Cloud Drivers."
    Register-Cloud-Driver:
      method: post
      resourcePath: /driver
      description: "Register a new Cloud Driver. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/features-and-usages#1-cloud-driver-%EC%A0%95%EB%B3%B4-%EB%93%B1%EB%A1%9D-%EB%B0%8F-%EA%B4%80%EB%A6%AC)]"
    Unregister-Cluster:
      method: delete
      resourcePath: /regcluster/{Name}
      description: "Unregister a Cluster with the specified name."
    List-Myimage:
      method: get
      resourcePath: /myimage
      description: "Retrieve a list of MyImages associated with a specific connection."
    Snapshot-Vm:
      method: post
      resourcePath: /myimage
      description: "Create a new MyImage snapshot from a specified VM. üï∑Ô∏è [[Concept Guide](https://github.com/cloud-barista/cb-spider/wiki/MyImage-and-Driver-API)], [[Snapshot-MyImage,Disk Guide](https://github.com/cloud-barista/cb-spider/wiki/VM-Snapshot,-MyImage-and-Disk-Overview)]"
    Delete-Vpc:
      method: delete
      resourcePath: /vpc/{Name}
      description: "Delete a specified Virtual Private Cloud (VPC)."
    Get-Vpc:
      method: get
      resourcePath: /vpc/{Name}
      description: "Retrieve details of a specific Virtual Private Cloud (VPC)."
    Count-All-Vpcs:
      method: get
      resourcePath: /countvpc
      description: "Get the total number of VPCs across all connections."
    Delete-Csp-Nlb:
      method: delete
      resourcePath: /cspnlb/{Id}
      description: "Delete a specified CSP Network Load Balancer (NLB)."
    Count-All-Connections:
      method: get
      resourcePath: /countconnectionconfig
      description: "Get the total number of connections."
    Count-All-Myimages:
      method: get
      resourcePath: /countmyimage
      description: "Get the total number of MyImages across all connections."
    List-Preconfigured-Original-Org-Region:
      method: get
      resourcePath: /preconfig/orgregion
      description: "Retrieve a list of pre-configured Original Regions based on driver and credential names. <br> The response structure may vary depending on the request DriverName and CredentialName."
    Unregister-Disk:
      method: delete
      resourcePath: /regdisk/{Name}
      description: "Unregister a Disk with the specified name."
    Unregister-Nlb:
      method: delete
      resourcePath: /regnlb/{Name}
      description: "Unregister a Network Load Balancer (NLB) with the specified name."
    List-Vm-Spec:
      method: get
      resourcePath: /vmspec
      description: "Retrieve a list of VM specs associated with a specific connection. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/features-and-usages#2-vm-spec-%EC%A0%95%EB%B3%B4-%EC%A0%9C%EA%B3%B5)]"
    List-All-Key:
      method: get
      resourcePath: /allkeypair
      description: "Retrieve a comprehensive list of all KeyPairs associated with a specific connection, <br> including those mapped between CB-Spider and the CSP, <br> only registered in CB-Spider's metadata, <br> and only existing in the CSP."
    Count-Clusters-By-Connection:
      method: get
      resourcePath: /countcluster/{ConnectionName}
      description: "Get the total number of Clusters for a specific connection."
    Count-All-Disks:
      method: get
      resourcePath: /countdisk
      description: "Get the total number of Disks across all connections."
    Count-Vpcs-By-Connection:
      method: get
      resourcePath: /countvpc/{ConnectionName}
      description: "Get the total number of VPCs for a specific connection."
    Register-Subnet:
      method: post
      resourcePath: /regsubnet
      description: "Register a new Subnet within a specified VPC."
    Add-Rules-Securitygroup:
      method: post
      resourcePath: /securitygroup/{SGName}/rules
      description: "Add new rules to a Security Group."
    Remove-Rules-Securitygroup:
      method: delete
      resourcePath: /securitygroup/{SGName}/rules
      description: "Remove existing rules from a Security Group."
    Remove-Subnet:
      method: delete
      resourcePath: /vpc/{VPCName}/subnet/{SubnetName}
      description: "Remove an existing Subnet from a VPC."
    List-All-Disk:
      method: get
      resourcePath: /alldisk
      description: "Retrieve a comprehensive list of all Disks associated with a specific connection, <br> including those mapped between CB-Spider and the CSP, <br> only registered in CB-Spider's metadata, <br> and only existing in the CSP."
    Get-Cluster:
      method: get
      resourcePath: /cluster/{Name}
      description: "Retrieve details of a specific Cluster."
    Delete-Cluster:
      method: delete
      resourcePath: /cluster/{Name}
      description: "Delete a specified Cluster."
    Unregister-Vm:
      method: delete
      resourcePath: /regvm/{Name}
      description: "Unregister a Virtual Machine (VM) with the specified name."
    List-Securitygroup:
      method: get
      resourcePath: /securitygroup
      description: "Retrieve a list of Security Groups associated with a specific connection."
    Create-Securitygroup:
      method: post
      resourcePath: /securitygroup
      description: "Create a new Security Group with specified rules and tags. üï∑Ô∏è [[Concept Guide](https://github.com/cloud-barista/cb-spider/wiki/Security-Group-Rules-and-Driver-API)], üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/features-and-usages#4-securitygroup-%EC%83%9D%EC%84%B1-%EB%B0%8F-%EC%A0%9C%EC%96%B4)]"
    Get-Credential:
      method: get
      resourcePath: /credential/{CredentialName}
      description: "Retrieve details of a specific Credential."
    Unregister-Credential:
      method: delete
      resourcePath: /credential/{CredentialName}
      description: "Unregister a specific Credential."
    List-Key:
      method: get
      resourcePath: /keypair
      description: "Retrieve a list of KeyPairs associated with a specific connection."
    Create-Key:
      method: post
      resourcePath: /keypair
      description: "Create a new KeyPair with the specified configurations. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/features-and-usages#5-vm-keypair-%EC%83%9D%EC%84%B1-%EB%B0%8F-%EC%A0%9C%EC%96%B4)]"
    Get-Nlb:
      method: get
      resourcePath: /nlb/{Name}
      description: "Retrieve details of a specific Network Load Balancer (NLB)."
    Delete-Nlb:
      method: delete
      resourcePath: /nlb/{Name}
      description: "Delete a specified Network Load Balancer (NLB)."
    Remove-Csp-Subnet:
      method: delete
      resourcePath: /vpc/{VPCName}/cspsubnet/{Id}
      description: "Remove an existing CSP Subnet from a VPC."
    List-All-Myimage:
      method: get
      resourcePath: /allmyimage
      description: "Retrieve a comprehensive list of all MyImages associated with a specific connection, <br> including those mapped between CB-Spider and the CSP, <br> only registered in CB-Spider's metadata, <br> and only existing in the CSP."
    Delete-Csp-Cluster:
      method: delete
      resourcePath: /cspcluster/{Id}
      description: "Delete a specified CSP Cluster."
    List-Vm-Status:
      method: get
      resourcePath: /vmstatus
      description: "Retrieve a list of statuses for Virtual Machines (VMs) associated with a specific connection."
    Count-Keys-By-Connection:
      method: get
      resourcePath: /countkeypair/{ConnectionName}
      description: "Get the total number of KeyPairs for a specific connection."
    Register-Disk:
      method: post
      resourcePath: /regdisk
      description: "Register a new Disk with the specified name, zone, and CSP ID."
    Get-Connection-Config:
      method: get
      resourcePath: /connectionconfig/{ConfigName}
      description: "Retrieve details of a specific Connection Config."
    Delete-Connection-Config:
      method: delete
      resourcePath: /connectionconfig/{ConfigName}
      description: "Delete a specific Connection Config."
    List-All-Nlb:
      method: get
      resourcePath: /allnlb
      description: "Retrieve a comprehensive list of all Network Load Balancers (NLBs) associated with a specific connection, <br> including those mapped between CB-Spider and the CSP, <br> only registered in CB-Spider's metadata, <br> and only existing in the CSP."
    List-Cloudos:
      method: get
      resourcePath: /cloudos
      description: "Retrieve a list of supported Cloud OS."
    Delete-Csp-Vpc:
      method: delete
      resourcePath: /cspvpc/{Id}
      description: "Delete a specified CSP Virtual Private Cloud (VPC)."
    Upload-Cloud-Driver:
      method: post
      resourcePath: /driver/upload
      description: "Upload a Cloud Driver library file."
    Get-Nlb-Owner-Vpc:
      method: post
      resourcePath: /getnlbowner
      description: "Retrieve the owner VPC of a specified Network Load Balancer (NLB)."
    Get-Securitygroup:
      method: get
      resourcePath: /securitygroup/{Name}
      description: "Retrieve details of a specific Security Group."
    Delete-Securitygroup:
      method: delete
      resourcePath: /securitygroup/{Name}
      description: "Delete a specified Security Group."
    Get-Image:
      method: get
      resourcePath: /vmimage/{Name}
      description: "Retrieve details of a specific Public Image. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/How-to-get-Image-List-with-REST-API)]"
    Count-All-Nlbs:
      method: get
      resourcePath: /countnlb
      description: "Get the total number of Network Load Balancers (NLBs) across all connections."
    Delete-Csp-Disk:
      method: delete
      resourcePath: /cspdisk/{Id}
      description: "Delete a specified CSP Disk."
    Health-Check-Healthcheck:
      method: get
      resourcePath: /healthcheck
      description: "Checks the health of CB-Spider service and its dependencies via /healthcheck endpoint. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/Readiness-Check-Guide)]"
    List-Region-Zone:
      method: get
      resourcePath: /regionzone
      description: "Retrieve a list of Region Zones associated with a specific connection. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/REST-API-Region-Zone-Information-Guide)]"
    Count-All-Subnets:
      method: get
      resourcePath: /countsubnet
      description: "Get the total number of Subnets across all connections."
    List-Credentials:
      method: get
      resourcePath: /credential
      description: "Retrieve a list of registered Credentials."
    Register-Credential:
      method: post
      resourcePath: /credential
      description: "Register a new Credential. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/features-and-usages#2-cloud-credential-%EC%A0%95%EB%B3%B4-%EB%93%B1%EB%A1%9D-%EB%B0%8F-%EA%B4%80%EB%A6%AC)]"
    Count-Nlbs-By-Connection:
      method: get
      resourcePath: /countnlb/{ConnectionName}
      description: "Get the total number of Network Load Balancers (NLBs) for a specific connection."
    Register-Securitygroup:
      method: post
      resourcePath: /regsecuritygroup
      description: "Register a new Security Group with the specified name and CSP ID."
    List-Org-Zone:
      method: get
      resourcePath: /orgzone
      description: "Retrieve a list of Original Zones associated with a specific connection. <br> The response structure may vary depending on the request ConnectionName."
    Get-Vm-Status:
      method: get
      resourcePath: /vmstatus/{Name}
      description: "Retrieve the status of a specific Virtual Machine (VM)."
    Delete-Csp-Key:
      method: delete
      resourcePath: /cspkeypair/{Id}
      description: "Delete a specified CSP KeyPair."
    Terminate-Csp-Vm:
      method: delete
      resourcePath: /cspvm/{Id}
      description: "Terminate a specified CSP Virtual Machine (VM)."
    Get-Csp-Vm:
      method: get
      resourcePath: /cspvm/{Id}
      description: "Retrieve details of a specific CSP Virtual Machine (VM)."
    Count-Securitygroups-By-Connection:
      method: get
      resourcePath: /countsecuritygroup/{ConnectionName}
      description: "Get the total number of Security Groups for a specific connection."
    List-All-Securitygroups:
      method: get
      resourcePath: /allsecuritygroup
      description: "Retrieve a comprehensive list of all Security Groups associated with a specific connection, <br> including those mapped between CB-Spider and the CSP, <br> only registered in CB-Spider's metadata, <br> and only existing in the CSP."
    Change-Nodegroup-Scaling:
      method: put
      resourcePath: /cluster/{Name}/nodegroup/{NodeGroupName}/autoscalesize
      description: "Change the scaling settings for a Node Group in a Cluster."
    List-Org-Vm-Spec:
      method: get
      resourcePath: /vmorgspec
      description: "Retrieve a list of Original VM Specs associated with a specific connection. <br> The response structure may vary depending on the request ConnectionName."
    Add-Subnet:
      method: post
      resourcePath: /vpc/{VPCName}/subnet
      description: "Add a new Subnet to an existing VPC."
    Register-Cluster:
      method: post
      resourcePath: /regcluster
      description: "Register a new Cluster with the specified VPC and CSP ID."
    Unregister-Vpc:
      method: delete
      resourcePath: /regvpc/{Name}
      description: "Unregister a VPC with the specified name."
    List-Regions:
      method: get
      resourcePath: /region
      description: "Retrieve a list of registered Regions."
    Register-Region:
      method: post
      resourcePath: /region
      description: "Register a new Region. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/features-and-usages#3-cloud-regionzone-%EC%A0%95%EB%B3%B4-%EB%93%B1%EB%A1%9D-%EB%B0%8F-%EA%B4%80%EB%A6%AC)]"
    Delete-Csp-Myimage:
      method: delete
      resourcePath: /cspmyimage/{Id}
      description: "Delete a specified CSP MyImage."
    List-Nlb:
      method: get
      resourcePath: /nlb
      description: "Retrieve a list of Network Load Balancers (NLBs) associated with a specific connection."
    Create-Nlb:
      method: post
      resourcePath: /nlb
      description: "Create a new Network Load Balancer (NLB) with specified configurations. üï∑Ô∏è [[Concept Guide](https://github.com/cloud-barista/cb-spider/wiki/Network-Load-Balancer-and-Driver-API)]"
    Get-Vm-Using-Rs:
      method: get
      resourcePath: /getvmusingresources
      description: "Retrieve details of a VM using resource ID."
    Health-Check-Health:
      method: get
      resourcePath: /health
      description: "Checks the health of CB-Spider service and its dependencies via /health endpoint. üï∑Ô∏è [[User Guide](https://github.com/cloud-barista/cb-spider/wiki/Readiness-Check-Guide)]"
    Get-Myimage:
      method: get
      resourcePath: /myimage/{Name}
      description: "Retrieve details of a specific MyImage."
    Delete-Myimage:
      method: delete
      resourcePath: /myimage/{Name}
      description: "Delete a specified MyImage."
    Count-All-Securitygroups:
      method: get
      resourcePath: /countsecuritygroup
      description: "Get the total number of Security Groups across all connections."
    Count-Subnets-By-Connection:
      method: get
      resourcePath: /countsubnet/{ConnectionName}
      description: "Get the total number of Subnets for a specific connection."
    Count-Vms-By-Connection:
      method: get
      resourcePath: /countvm/{ConnectionName}
      description: "Get the total number of Virtual Machines (VMs) for a specific connection."
    Get-Cloud-Driver:
      method: get
      resourcePath: /driver/{DriverName}
      description: "Retrieve details of a specific Cloud Driver."
    Unregister-Cloud-Driver:
      method: delete
      resourcePath: /driver/{DriverName}
      description: "Unregister a specific Cloud Driver."
  
  
  cb-tumblebug:
    GetAllSecurityGroup:
      method: get
      resourcePath: /ns/{nsId}/resources/securityGroup
      description: "List all Security Groups or Security Groups' ID"
    PostSecurityGroup:
      method: post
      resourcePath: /ns/{nsId}/resources/securityGroup
      description: "Create Security Group"
    DelAllSecurityGroup:
      method: delete
      resourcePath: /ns/{nsId}/resources/securityGroup
      description: "Delete all Security Groups"
    GetProviderList:
      method: get
      resourcePath: /provider
      description: "List all registered Providers"
    GetResourcesByLabelSelector:
      method: get
      resourcePath: /resources/{labelType}
      description: "Get resources based on a label selector. The label selector supports the following operators:\n- `=` : Selects resources where the label key equals the specified value (e.g., `env=production`).\n- `!=` : Selects resources where the label key does not equal the specified value (e.g., `tier!=frontend`).\n- `in` : Selects resources where the label key is in the specified set of values (e.g., `region in (us-west, us-east)`).\n- `notin` : Selects resources where the label key is not in the specified set of values (e.g., `env notin (production, staging)`).\n- `exists` : Selects resources where the label key exists (e.g., `env exists`).\n- `!exists` : Selects resources where the label key does not exist (e.g., `env !exists`)."
    GetK8sClusterInfo:
      method: get
      resourcePath: /k8sClusterInfo
      description: "Get kubernetes cluster information"
    DelAllDataDisk:
      method: delete
      resourcePath: /ns/{nsId}/resources/dataDisk
      description: "Delete all Data Disks"
    GetAllDataDisk:
      method: get
      resourcePath: /ns/{nsId}/resources/dataDisk
      description: "List all Data Disks or Data Disks' ID"
    PostDataDisk:
      method: post
      resourcePath: /ns/{nsId}/resources/dataDisk
      description: "Create Data Disk"
    PostSubnet:
      method: post
      resourcePath: /ns/{nsId}/resources/vNet/{vNetId}/subnet
      description: "Create Subnet"
    GetAllSubnet:
      method: get
      resourcePath: /ns/{nsId}/resources/vNet/{vNetId}/subnet
      description: "List all subnets (metadata)"
    GetLabels:
      method: get
      resourcePath: /label/{labelType}/{uid}
      description: "Get labels for a resource identified by its uid"
    CreateOrUpdateLabel:
      method: put
      resourcePath: /label/{labelType}/{uid}
      description: "Create or update a label for a resource identified by its uid"
    PutSetK8sNodeGroupAutoscaling:
      method: put
      resourcePath: /ns/{nsId}/k8scluster/{k8sClusterId}/k8snodegroup/{k8sNodeGroupName}/onautoscaling
      description: "Set a K8sNodeGroup's Autoscaling On/Off"
    DelMci:
      method: delete
      resourcePath: /ns/{nsId}/mci/{mciId}
      description: "Delete MCI"
    GetMci:
      method: get
      resourcePath: /ns/{nsId}/mci/{mciId}
      description: "Get MCI object (option: status, accessInfo, vmId)"
    LoadAssets:
      method: get
      resourcePath: /loadAssets
      description: "Load Common Resources from internal asset files (Spec, Image)"
    PostRegisterVNet:
      method: post
      resourcePath: /ns/{nsId}/registerCspResource/vNet
      description: "Register the VNet, which was created in CSP"
    PostSshKey:
      method: post
      resourcePath: /ns/{nsId}/resources/sshKey
      description: "Create SSH Key"
    DelAllSshKey:
      method: delete
      resourcePath: /ns/{nsId}/resources/sshKey
      description: "Delete all SSH Keys"
    GetAllSshKey:
      method: get
      resourcePath: /ns/{nsId}/resources/sshKey
      description: "List all SSH Keys or SSH Keys' ID"
    GetObject:
      method: get
      resourcePath: /object
      description: "Get value of an object"
    DeleteObject:
      method: delete
      resourcePath: /object
      description: "Delete an object"
    GetAvailableK8sClusterNodeImage:
      method: get
      resourcePath: /availableK8sClusterNodeImage
      description: "Get available kubernetes cluster node image"
    InspectResourcesOverview:
      method: get
      resourcePath: /inspectResourcesOverview
      description: "Inspect Resources Overview (vNet, securityGroup, sshKey, vm) registered in CB-Tumblebug and CSP for all connections"
    GetNLB:
      method: get
      resourcePath: /ns/{nsId}/mci/{mciId}/nlb/{nlbId}
      description: "Get NLB"
    DelNLB:
      method: delete
      resourcePath: /ns/{nsId}/mci/{mciId}/nlb/{nlbId}
      description: "Delete NLB"
    PostFirewallRules:
      method: post
      resourcePath: /ns/{nsId}/resources/securityGroup/{securityGroupId}/rules
      description: "Create FirewallRules"
    DelFirewallRules:
      method: delete
      resourcePath: /ns/{nsId}/resources/securityGroup/{securityGroupId}/rules
      description: "Delete FirewallRules"
    DelVNet:
      method: delete
      resourcePath: /ns/{nsId}/resources/vNet/{vNetId}
      description: "Delete VNet"
    GetVNet:
      method: get
      resourcePath: /ns/{nsId}/resources/vNet/{vNetId}
      description: "Get VNet"
    RegisterCredential:
      method: post
      resourcePath: /credential
      description: "This API registers credential information using hybrid encryption. The process involves compressing and encrypting sensitive data with AES-256, encrypting the AES key with a 4096-bit RSA public key (retrieved via `GET /credential/publicKey`), and using OAEP padding with SHA-256. All values, including the AES key, must be base64 encoded before sending, and the public key token ID must be included in the request."
    GetSitesInMci:
      method: get
      resourcePath: /ns/{nsId}/mci/{mciId}/site
      description: "Get sites in MCI"
    PutUpgradeK8sCluster:
      method: put
      resourcePath: /ns/{nsId}/k8scluster/{k8sClusterId}/upgrade
      description: "Upgrade a K8sCluster's version"
    GetNLBHealth:
      method: get
      resourcePath: /ns/{nsId}/mci/{mciId}/nlb/{nlbId}/healthz
      description: "Get NLB Health"
    GetSiteToSiteVpn:
      method: get
      resourcePath: /ns/{nsId}/mci/{mciId}/vpn/{vpnId}
      description: "Get resource info of a site-to-site VPN (Currently, GCP-AWS is supported)"
    DelDataDisk:
      method: delete
      resourcePath: /ns/{nsId}/resources/dataDisk/{dataDiskId}
      description: "Delete Data Disk"
    GetDataDisk:
      method: get
      resourcePath: /ns/{nsId}/resources/dataDisk/{dataDiskId}
      description: "Get Data Disk"
    PutDataDisk:
      method: put
      resourcePath: /ns/{nsId}/resources/dataDisk/{dataDiskId}
      description: "Upsize Data Disk"
    PostVNet:
      method: post
      resourcePath: /ns/{nsId}/resources/vNet
      description: "Create a new VNet"
    DelAllVNet:
      method: delete
      resourcePath: /ns/{nsId}/resources/vNet
      description: "Delete all VNets"
    GetAllVNet:
      method: get
      resourcePath: /ns/{nsId}/resources/vNet
      description: "List all VNets or VNets' ID"
    RemoveLabel:
      method: delete
      resourcePath: /label/{labelType}/{uid}/{key}
      description: "Remove a label from a resource identified by its uid"
    PostInstallBenchmarkAgentToMci:
      method: post
      resourcePath: /ns/{nsId}/installBenchmarkAgent/mci/{mciId}
      description: "Install the benchmark agent to specified MCI"
    GetMciGroupIds:
      method: get
      resourcePath: /ns/{nsId}/mci/{mciId}/subgroup
      description: "List SubGroup IDs in a specified MCI"
    GetMciGroupVms:
      method: get
      resourcePath: /ns/{nsId}/mci/{mciId}/subgroup/{subgroupId}
      description: "List VMs with a SubGroup label in a specified MCI"
    PostMciSubGroupScaleOut:
      method: post
      resourcePath: /ns/{nsId}/mci/{mciId}/subgroup/{subgroupId}
      description: "ScaleOut subGroup in specified MCI"
    GetRequest:
      method: get
      resourcePath: /request/{reqId}
      description: "Get details of a specific request"
    DeleteRequest:
      method: delete
      resourcePath: /request/{reqId}
      description: "Delete details of a specific request"
    PostUtilToValidateNetwork:
      method: post
      resourcePath: /util/net/validate
      description: "Validate a hierarchical configuration of a VPC network or multi-cloud network consisting of multiple VPC networks"
    TestJWTAuth:
      method: get
      resourcePath: /auth/test
      description: "Test JWT authentication"
    GetBenchmark:
      method: post
      resourcePath: /ns/{nsId}/benchmark/mci/{mciId}
      description: "Run MCI benchmark for a single performance metric and return results"
    CheckNodeGroupsOnK8sCreation:
      method: get
      resourcePath: /checkNodeGroupsOnK8sCreation
      description: "Check whether nodegroups are required during the k8scluster creation"
    GetConnConfig:
      method: get
      resourcePath: /connConfig/{connConfigName}
      description: "Get registered ConnConfig info"
    LookupImage:
      method: post
      resourcePath: /lookupImage
      description: "Lookup image"
    PostRegisterCSPNativeVM:
      method: post
      resourcePath: /ns/{nsId}/registerCspVm
      description: "Register existing VM in a CSP to Cloud-Barista MCI"
    GetReadyz:
      method: get
      resourcePath: /readyz
      description: "Check Tumblebug is ready"
    DelNs:
      method: delete
      resourcePath: /ns/{nsId}
      description: "Delete namespace"
    GetNs:
      method: get
      resourcePath: /ns/{nsId}
      description: "Get namespace"
    PutNs:
      method: put
      resourcePath: /ns/{nsId}
      description: "Update namespace"
    DeleteK8sCluster:
      method: delete
      resourcePath: /ns/{nsId}/k8scluster/{k8sClusterId}
      description: "Delete K8sCluster"
    GetK8sCluster:
      method: get
      resourcePath: /ns/{nsId}/k8scluster/{k8sClusterId}
      description: "Get K8sCluster"
    PostK8sNodeGroup:
      method: post
      resourcePath: /ns/{nsId}/k8scluster/{k8sClusterId}/k8snodegroup
      description: "Add a K8sNodeGroup"
    PostMcNLB:
      method: post
      resourcePath: /ns/{nsId}/mci/{mciId}/mcSwNlb
      description: "Create a special purpose MCI for NLB and depoly and setting SW NLB"
    GetAllBenchmark:
      method: post
      resourcePath: /ns/{nsId}/benchmarkAll/mci/{mciId}
      description: "Run MCI benchmark for all performance metrics and return results"
    GetObjects:
      method: get
      resourcePath: /objects
      description: "List all objects for a given key"
    DeleteObjects:
      method: delete
      resourcePath: /objects
      description: "Delete child objects along with the given object"
    RegisterCspNativeResources:
      method: post
      resourcePath: /registerCspResources
      description: "Register CSP Native Resources (vNet, securityGroup, sshKey, vm) to CB-Tumblebug"
    GetControlMci:
      method: get
      resourcePath: /ns/{nsId}/control/mci/{mciId}
      description: "Control the lifecycle of MCI (refine, suspend, resume, reboot, terminate)"
    GetImage:
      method: get
      resourcePath: /ns/{nsId}/resources/image/{imageId}
      description: "Get image"
    PutImage:
      method: put
      resourcePath: /ns/{nsId}/resources/image/{imageId}
      description: "Update image"
    DelImage:
      method: delete
      resourcePath: /ns/{nsId}/resources/image/{imageId}
      description: "Delete image"
    SearchImage:
      method: post
      resourcePath: /ns/{nsId}/resources/searchImage
      description: "Search image"
    PostUtilToDesignNetwork:
      method: post
      resourcePath: /util/net/design
      description: "Design a hierarchical network configuration of a VPC network or multi-cloud network consisting of multiple VPC networks"
    PostMciVmDynamic:
      method: post
      resourcePath: /ns/{nsId}/mci/{mciId}/vmDynamic
      description: "Create VM Dynamically and add it to MCI"
    PutSiteToSiteVpn:
      method: put
      resourcePath: /stream-response/ns/{nsId}/mci/{mciId}/vpn/{vpnId}
      description: "(To be provided) Update a site-to-site VPN"
    PostSiteToSiteVpn:
      method: post
      resourcePath: /stream-response/ns/{nsId}/mci/{mciId}/vpn/{vpnId}
      description: "Create a site-to-site VPN (Currently, GCP-AWS is supported)"
    DeleteSiteToSiteVpn:
      method: delete
      resourcePath: /stream-response/ns/{nsId}/mci/{mciId}/vpn/{vpnId}
      description: "Delete a site-to-site VPN (Currently, GCP-AWS is supported)"
    PostInstallMonitorAgentToMci:
      method: post
      resourcePath: /ns/{nsId}/monitoring/install/mci/{mciId}
      description: "Install monitoring agent (CB-Dragonfly agent) to MCI"
    CheckHTTPVersion:
      method: get
      resourcePath: /httpVersion
      description: "Checks and logs the HTTP version of the incoming request to the server console."
    GetControlMciVm:
      method: get
      resourcePath: /ns/{nsId}/control/mci/{mciId}/vm/{vmId}
      description: "Control the lifecycle of VM (suspend, resume, reboot, terminate)"
    GetAllMciPolicy:
      method: get
      resourcePath: /ns/{nsId}/policy/mci
      description: "List all MCI policies"
    DelAllMciPolicy:
      method: delete
      resourcePath: /ns/{nsId}/policy/mci
      description: "Delete all MCI policies"
    LookupSpec:
      method: post
      resourcePath: /lookupSpec
      description: "Lookup spec"
    CheckResource:
      method: get
      resourcePath: /ns/{nsId}/checkResource/{resourceType}/{resourceId}
      description: "Check resources' existence"
    DeleteDeregisterSubnet:
      method: delete
      resourcePath: /ns/{nsId}/deregisterCspResource/vNet/{vNetId}/subnet/{subnetId}
      description: "Deregister Subnet, which was created in CSP"
    GetVmDataDisk:
      method: get
      resourcePath: /ns/{nsId}/mci/{mciId}/vm/{vmId}/dataDisk
      description: "Get available dataDisks for a VM"
    PutVmDataDisk:
      method: put
      resourcePath: /ns/{nsId}/mci/{mciId}/vm/{vmId}/dataDisk
      description: "Attach/Detach available dataDisk"
    PostVmDataDisk:
      method: post
      resourcePath: /ns/{nsId}/mci/{mciId}/vm/{vmId}/dataDisk
      description: "Provisioning (Create and attach) dataDisk"
    PutMonitorAgentStatusInstalled:
      method: put
      resourcePath: /ns/{nsId}/monitoring/status/mci/{mciId}/vm/{vmId}
      description: "Set monitoring agent (CB-Dragonfly agent) installation status installed (for Windows VM only)"
    PostUtilToDesignVNet:
      method: post
      resourcePath: /util/vNet/design
      description: "Design VNet and subnets based on user-friendly properties"
    GetCloudInfo:
      method: get
      resourcePath: /cloudInfo
      description: "Get cloud information"
    LookupSpecList:
      method: post
      resourcePath: /lookupSpecs
      description: "Lookup spec list"
    PostMciDynamicCheckRequest:
      method: post
      resourcePath: /mciDynamicCheckRequest
      description: "Check available ConnectionConfig list before create MCI Dynamically from common spec and image"
    DeleteK8sNodeGroup:
      method: delete
      resourcePath: /ns/{nsId}/k8scluster/{k8sClusterId}/k8snodegroup/{k8sNodeGroupName}
      description: "Remove a K8sNodeGroup"
    GetMciPolicy:
      method: get
      resourcePath: /ns/{nsId}/policy/mci/{mciId}
      description: "Get MCI Policy"
    PostMciPolicy:
      method: post
      resourcePath: /ns/{nsId}/policy/mci/{mciId}
      description: "Create MCI Automation policy"
    DelMciPolicy:
      method: delete
      resourcePath: /ns/{nsId}/policy/mci/{mciId}
      description: "Delete MCI Policy"
    GetSecurityGroup:
      method: get
      resourcePath: /ns/{nsId}/resources/securityGroup/{securityGroupId}
      description: "Get Security Group"
    DelSecurityGroup:
      method: delete
      resourcePath: /ns/{nsId}/resources/securityGroup/{securityGroupId}
      description: "Delete Security Group"
    GetSshKey:
      method: get
      resourcePath: /ns/{nsId}/resources/sshKey/{sshKeyId}
      description: "Get SSH Key"
    PutSshKey:
      method: put
      resourcePath: /ns/{nsId}/resources/sshKey/{sshKeyId}
      description: "Update SSH Key"
    DelSshKey:
      method: delete
      resourcePath: /ns/{nsId}/resources/sshKey/{sshKeyId}
      description: "Delete SSH Key"
    DeleteDeregisterVNet:
      method: delete
      resourcePath: /ns/{nsId}/deregisterCspResource/vNet/{vNetId}
      description: "Deregister the VNet, which was created in CSP"
    PostRegisterSubnet:
      method: post
      resourcePath: /ns/{nsId}/registerCspResource/vNet/{vNetId}/subnet
      description: "Register Subnet, which was created in CSP"
    FetchImages:
      method: post
      resourcePath: /ns/{nsId}/resources/fetchImages
      description: "Fetch images"
    AddNLBVMs:
      method: post
      resourcePath: /ns/{nsId}/mci/{mciId}/nlb/{nlbId}/vm
      description: "Add VMs to NLB"
    RemoveNLBVMs:
      method: delete
      resourcePath: /ns/{nsId}/mci/{mciId}/nlb/{nlbId}/vm
      description: "Delete VMs from NLB"
    GetAllCustomImage:
      method: get
      resourcePath: /ns/{nsId}/resources/customImage
      description: "List all customImages or customImages' ID"
    PostCustomImage:
      method: post
      resourcePath: /ns/{nsId}/resources/customImage
      description: "Register existing Custom Image in a CSP (option=register)"
    DelAllCustomImage:
      method: delete
      resourcePath: /ns/{nsId}/resources/customImage
      description: "Delete all customImages"
    DelSubnet:
      method: delete
      resourcePath: /ns/{nsId}/resources/vNet/{vNetId}/subnet/{subnetId}
      description: "Delete Subnet"
    GetSubnet:
      method: get
      resourcePath: /ns/{nsId}/resources/vNet/{vNetId}/subnet/{subnetId}
      description: "Get Subnet (metadata)"
    GetRegions:
      method: get
      resourcePath: /provider/{providerName}/region
      description: "Get registered region info"
    InitConfig:
      method: delete
      resourcePath: /config/{configId}
      description: "Init config"
    GetConfig:
      method: get
      resourcePath: /config/{configId}
      description: "Get config"
    RecommendVm:
      method: post
      resourcePath: /mciRecommendVm
      description: "Recommend MCI plan (filter and priority) Find details from https://github.com/cloud-barista/cb-tumblebug/discussions/1234"
    DelAllMci:
      method: delete
      resourcePath: /ns/{nsId}/mci
      description: "Delete all MCIs"
    GetAllMci:
      method: get
      resourcePath: /ns/{nsId}/mci
      description: "List all MCIs or MCIs' ID"
    PostMci:
      method: post
      resourcePath: /ns/{nsId}/mci
      description: "Create MCI"
    PostMciVm:
      method: post
      resourcePath: /ns/{nsId}/mci/{mciId}/vm
      description: "Create and add homogeneous VMs(subGroup) to a specified MCI (Set subGroupSize for multiple VMs)"
    SetBastionNodes:
      method: put
      resourcePath: /ns/{nsId}/mci/{mciId}/vm/{targetVmId}/bastion/{bastionVmId}
      description: "Set bastion nodes for a VM"
    PostSpec:
      method: post
      resourcePath: /ns/{nsId}/resources/spec
      description: "Register spec"
    CreateSharedResource:
      method: post
      resourcePath: /ns/{nsId}/sharedResource
      description: "Create shared resources for MC-Infra"
    GetRegion:
      method: get
      resourcePath: /provider/{providerName}/region/{regionName}
      description: "Get registered region info"
    RegisterCspNativeResourcesAll:
      method: post
      resourcePath: /registerCspResourcesAll
      description: "Register CSP Native Resources (vNet, securityGroup, sshKey, vm) from all Clouds to CB-Tumblebug"
    GetAvailableK8sClusterVersion:
      method: get
      resourcePath: /availableK8sClusterVersion
      description: "Get available kubernetes cluster version"
    GetConnConfigList:
      method: get
      resourcePath: /connConfig
      description: "List all registered ConnConfig"
    GetLatencyBenchmark:
      method: get
      resourcePath: /ns/{nsId}/benchmarkLatency/mci/{mciId}
      description: "Run MCI benchmark for network latency"
    PutChangeK8sNodeGroupAutoscaleSize:
      method: put
      resourcePath: /ns/{nsId}/k8scluster/{k8sClusterId}/k8snodegroup/{k8sNodeGroupName}/autoscalesize
      description: "Change a K8sNodeGroup's Autoscale Size"
    FetchSpecs:
      method: post
      resourcePath: /ns/{nsId}/resources/fetchSpecs
      description: "Fetch specs"
    GetAllConfig:
      method: get
      resourcePath: /config
      description: "List all configs"
    PostConfig:
      method: post
      resourcePath: /config
      description: "Create or Update config (TB_SPIDER_REST_URL, TB_DRAGONFLY_REST_URL, ...)"
    InitAllConfig:
      method: delete
      resourcePath: /config
      description: "Init all configs"
    PostCmdMci:
      method: post
      resourcePath: /ns/{nsId}/cmd/mci/{mciId}
      description: "Send a command to specified MCI"
    PostK8sCluster:
      method: post
      resourcePath: /ns/{nsId}/k8scluster
      description: "Create K8sCluster<br>Find details from https://github.com/cloud-barista/cb-tumblebug/discussions/1614"
    DeleteAllK8sCluster:
      method: delete
      resourcePath: /ns/{nsId}/k8scluster
      description: "Delete all K8sClusters"
    GetAllK8sCluster:
      method: get
      resourcePath: /ns/{nsId}/k8scluster
      description: "List all K8sClusters or K8sClusters' ID"
    GetCustomImage:
      method: get
      resourcePath: /ns/{nsId}/resources/customImage/{customImageId}
      description: "Get customImage"
    DelCustomImage:
      method: delete
      resourcePath: /ns/{nsId}/resources/customImage/{customImageId}
      description: "Delete customImage"
    GetAllImage:
      method: get
      resourcePath: /ns/{nsId}/resources/image
      description: "List all images or images' ID"
    PostImage:
      method: post
      resourcePath: /ns/{nsId}/resources/image
      description: "Register image"
    DelAllImage:
      method: delete
      resourcePath: /ns/{nsId}/resources/image
      description: "Delete all images"
    GetPublicKeyForCredentialEncryption:
      method: get
      resourcePath: /credential/publicKey
      description: "Generates an RSA key pair using a 4096-bit key size with the RSA algorithm. The public key is generated using the RSA algorithm with OAEP padding and SHA-256 as the hash function. This key is used to encrypt an AES key that will be used for hybrid encryption of credentials."
    LookupImageList:
      method: post
      resourcePath: /lookupImages
      description: "Lookup image list"
    GetMonitorData:
      method: get
      resourcePath: /ns/{nsId}/monitoring/mci/{mciId}/metric/{metric}
      description: "Get monitoring data of specified MCI for specified monitoring metric (cpu, memory, disk, network)"
    GetMciVm:
      method: get
      resourcePath: /ns/{nsId}/mci/{mciId}/vm/{vmId}
      description: "Get VM in specified MCI"
    DelMciVm:
      method: delete
      resourcePath: /ns/{nsId}/mci/{mciId}/vm/{vmId}
      description: "Delete VM in specified MCI"
    DelAllSharedResources:
      method: delete
      resourcePath: /ns/{nsId}/sharedResources
      description: "Delete all Default Resource Objects in the given namespace"
    RemoveBastionNodes:
      method: delete
      resourcePath: /ns/{nsId}/mci/{mciId}/bastion/{bastionVmId}
      description: "Remove a bastion VM from all vNets"
    DelAllNLB:
      method: delete
      resourcePath: /ns/{nsId}/mci/{mciId}/nlb
      description: "Delete all NLBs"
    GetAllNLB:
      method: get
      resourcePath: /ns/{nsId}/mci/{mciId}/nlb
      description: "List all NLBs or NLBs' ID"
    PostNLB:
      method: post
      resourcePath: /ns/{nsId}/mci/{mciId}/nlb
      description: "Create NLB"
    GetBastionNodes:
      method: get
      resourcePath: /ns/{nsId}/mci/{mciId}/vm/{targetVmId}/bastion
      description: "Get bastion nodes for a VM"
    InspectResources:
      method: post
      resourcePath: /inspectResources
      description: "Inspect Resources (vNet, securityGroup, sshKey, vm) registered in CB-Tumblebug, CB-Spider, CSP"
    GetAllNs:
      method: get
      resourcePath: /ns
      description: "List all namespaces or namespaces' ID"
    PostNs:
      method: post
      resourcePath: /ns
      description: "Create namespace"
    DelAllNs:
      method: delete
      resourcePath: /ns
      description: "Delete all namespaces"
    FilterSpecsByRange:
      method: post
      resourcePath: /ns/{nsId}/resources/filterSpecsByRange
      description: "Filter specs by range"
    GetSpec:
      method: get
      resourcePath: /ns/{nsId}/resources/spec/{specId}
      description: "Get spec"
    PutSpec:
      method: put
      resourcePath: /ns/{nsId}/resources/spec/{specId}
      description: "Update spec"
    DelSpec:
      method: delete
      resourcePath: /ns/{nsId}/resources/spec/{specId}
      description: "Delete spec"
    ForwardAnyReqToAny:
      method: post
      resourcePath: /forward/{path}
      description: "Forward any (GET) request to CB-Spider"
    PostMciVmSnapshot:
      method: post
      resourcePath: /ns/{nsId}/mci/{mciId}/vm/{vmId}/snapshot
      description: "Snapshot VM and create a Custom Image Object using the Snapshot"
    GetRequestStatusOfSiteToSiteVpn:
      method: get
      resourcePath: /ns/{nsId}/mci/{mciId}/vpn/{vpnId}/request/{requestId}
      description: "Check the status of a specific request by its ID"
    PostMciDynamic:
      method: post
      resourcePath: /ns/{nsId}/mciDynamic
      description: "Create MCI Dynamically from common spec and image"
    RetrieveRegionListFromCsp:
      method: get
      resourcePath: /regionFromCsp
      description: "RetrieveR all region lists from CSPs"
    GetAllRequests:
      method: get
      resourcePath: /requests
      description: "Get details of all requests with optional filters."
    DeleteAllRequests:
      method: delete
      resourcePath: /requests
      description: "Delete details of all requests"
    PostSystemMci:
      method: post
      resourcePath: /systemMci
      description: "Create System MCI Dynamically for Special Purpose"

  
  cm-beetle:
    DeleteInfra:
      method: delete
      resourcePath: /migration/ns/{nsId}/mci/{mciId}
      description: "Delete the migrated mult-cloud infrastructure (MCI)"
    GetInfra:
      method: get
      resourcePath: /migration/ns/{nsId}/mci/{mciId}
      description: "Get the migrated multi-cloud infrastructure (MCI)"
    BeetleReadyz:
      method: get
      resourcePath: /readyz
      description: "Check Beetle is ready"
    RecommendInfra:
      method: post
      resourcePath: /recommendation/mci
      description: "Recommend an appropriate multi-cloud infrastructure (MCI) for cloud migration"
    CreateUser:
      method: post
      resourcePath: /sample/users
      description: "Create a new user with the given information."
    GetUsers:
      method: get
      resourcePath: /sample/users
      description: "Get information of all users."
    GetUser:
      method: get
      resourcePath: /sample/users/{id}
      description: "Get information of a user with a specific ID."
    UpdateUser:
      method: put
      resourcePath: /sample/users/{id}
      description: "Update a user with the given information."
    DeleteUser:
      method: delete
      resourcePath: /sample/users/{id}
      description: "Delete a user with the given information."
    PatchUser:
      method: patch
      resourcePath: /sample/users/{id}
      description: "Patch a user with the given information."
    HttpVersion:
      method: get
      resourcePath: /httpVersion
      description: "Checks and logs the HTTP version of the incoming request to the server console."
    MigrateInfra:
      method: post
      resourcePath: /migration/ns/{nsId}/mci
      description: "Migrate an infrastructure to the multi-cloud infrastructure (MCI)"

  
  cm-ant:
    GetLoadTestMetrics:
      method: get
      resourcePath: /api/v1/load/test/metrics
      description: "Retrieve load test metrics based on provided parameters."
    GetLoadTestExecutionState:
      method: get
      resourcePath: /api/v1/load/tests/state/{loadTestKey}
      description: "Retrieve a load test execution state by load test key."
    GetLoadTestExecutionInfo:
      method: get
      resourcePath: /api/v1/load/tests/infos/{loadTestKey}
      description: "Retrieve the load test execution state information for a specific load test key."
    RunLoadTest:
      method: post
      resourcePath: /api/v1/load/tests/run
      description: "Start a load test using the provided load test configuration."
    StopLoadTest:
      method: post
      resourcePath: /api/v1/load/tests/stop
      description: "Stop a running load test using the provided load test key."
    InstallLoadGenerator:
      method: post
      resourcePath: /api/v1/load/generators
      description: "Install a load generator either locally or remotely."
    GetAllLoadGeneratorInstallInfo:
      method: get
      resourcePath: /api/v1/load/generators
      description: "Retrieve a list of all installed load generators with pagination support."
    InstallMonitoringAgent:
      method: post
      resourcePath: /api/v1/load/monitoring/agent/install
      description: "Install a monitoring agent on specific mci."
    GetLoadTestResult:
      method: get
      resourcePath: /api/v1/load/test/result
      description: "Retrieve load test result based on provided parameters."
    GetAllLoadTestExecutionInfos:
      method: get
      resourcePath: /api/v1/load/tests/infos
      description: "Retrieve a list of all load test execution information with pagination support."
    UninstallLoadGenerator:
      method: delete
      resourcePath: /api/v1/load/generators/{loadGeneratorInstallInfoId}
      description: "Uninstall a previously installed load generator."
    GetAllMonitoringAgentInfos:
      method: get
      resourcePath: /api/v1/load/monitoring/agents
      description: "Retrieve monitoring agent information based on specified criteria."
    UninstallMonitoringAgent:
      method: post
      resourcePath: /api/v1/load/monitoring/agents/uninstall
      description: "Uninstall monitoring agents from specified VMs or all VMs in an mci."
    GetCostInfo:
      method: get
      resourcePath: /api/v1/cost/info
      description: "Retrieve cost information for specified parameters within a defined date range. The date range must be within a 6-month period. Optionally, you can specify cost aggregation type and date order for the results."
    UpdateCostInfo:
      method: post
      resourcePath: /api/v1/cost/info
      description: "Update cost information for specified resources, including details such as migration ID, cost resources, and additional AWS info if applicable. The request body must include a valid migration ID and a list of cost resources. If AWS-specific details are provided, ensure all required fields are populated."
    GetAllLoadTestExecutionState:
      method: get
      resourcePath: /api/v1/load/tests/state
      description: "Retrieve a list of all load test execution states with pagination support."
    GetPriceInfos:
      method: get
      resourcePath: /api/v1/price/info
      description: "Retrieve pricing information for cloud resources based on specified query parameters. Returns price data based on provider, region, instance type, vCPU, memory, and OS type. It offer instances with the lowest monthly prices what in the database."
    UpdatePriceInfos:
      method: post
      resourcePath: /api/v1/price/info
      description: "Retrieve pricing information for cloud resources based on specified parameters. If saved data is more than 7 days, fetch new data and insert new price data even if same price as before."

  
  cm-honeybee:
    Get-Software-Info-Source-Group:
      method: get
      resourcePath: /source_group/{sgId}/software
      description: "Get the software information for all connections in the source group."
    Get-Benchmark-Info:
      method: get
      resourcePath: /bench/{connId}
      description: "Get the benchmark information of the connection information."
    Get-Connection-Info-Directly:
      method: get
      resourcePath: /connection_info/{connId}
      description: "Get the connection information directly."
    Health-Check-Readyz:
      method: get
      resourcePath: /readyz
      description: "Check Honeybee is ready"
    Get-Source-Group:
      method: get
      resourcePath: /source_group/{sgId}
      description: "Get the source group."
    Update-Source-Group:
      method: put
      resourcePath: /source_group/{sgId}
      description: "Update the source group."
    Delete-Source-Group:
      method: delete
      resourcePath: /source_group/{sgId}
      description: "Delete the source group."
    Get-Infra-Info-Source-Group:
      method: get
      resourcePath: /source_group/{sgId}/infra
      description: "Get the infra information for all connections in the source group."
    Run-Benchmark-Info:
      method: get
      resourcePath: /bench/{connId}/run
      description: "Run the benchmark information of the connection information. If no Benchmark Agent is present on the connected server, it will be automatically installed, and the benchmark will be executed."
    Import-Infra:
      method: post
      resourcePath: /source_group/{sgId}/connection_info/{connId}/import/infra
      description: "Import the infra information."
    Get-Infra-Info:
      method: get
      resourcePath: /source_group/{sgId}/connection_info/{connId}/infra
      description: "Get the infra information of the connection information."
    Get-Kubernetes-Info-Source-Group:
      method: get
      resourcePath: /source_group/{sgId}/kubernetes
      description: "Get the kubernetes information for all connections in the source group."
    Import-Kubernetes:
      method: post
      resourcePath: /source_group/{sgId}/connection_info/{connId}/import/kubernetes
      description: "Import the kubernetes information."
    Get-Kubernetes-Info:
      method: get
      resourcePath: /source_group/{sgId}/connection_info/{connId}/kubernetes
      description: "Get the kubernetes information of the connection information."
    Import-Infra-Source-Group:
      method: post
      resourcePath: /source_group/{sgId}/import/infra
      description: "Import infra information for all connections in the source group."
    Stop-Benchmark:
      method: get
      resourcePath: /bench/{connId}/stop
      description: "Stop the benchmark"
    List-Source-Group:
      method: get
      resourcePath: /source_group
      description: "Get a list of source group."
    Register-Source-Group:
      method: post
      resourcePath: /source_group
      description: "Register the source group."
    Check-Agent-Source-Group:
      method: get
      resourcePath: /source_group/{sgId}/agent_check
      description: "Check Agent in source group. Show each status by returning agent info list. If no Agent is present on the connected server, the Agent will be automatically installed."
    List-Connection-Info:
      method: get
      resourcePath: /source_group/{sgId}/connection_info
      description: "Get a list of connection information."
    Create-Connection-Info:
      method: post
      resourcePath: /source_group/{sgId}/connection_info
      description: "Create the connection information."
    Delete-Connection-Info:
      method: delete
      resourcePath: /source_group/{sgId}/connection_info/{connId}
      description: "Delete the connection information."
    Get-Connection-Info:
      method: get
      resourcePath: /source_group/{sgId}/connection_info/{connId}
      description: "Get the connection information."
    Update-Connection-Info:
      method: put
      resourcePath: /source_group/{sgId}/connection_info/{connId}
      description: "Update the connection information."
    Import-Kubernetes-Source-Group:
      method: post
      resourcePath: /source_group/{sgId}/import/kubernetes
      description: "Import kubernetes information for all connections in the source group."
    Import-Software-Source-Group:
      method: post
      resourcePath: /source_group/{sgId}/import/software
      description: "Import software information for all connections in the source group."
    Check-Connection-Source-Group:
      method: get
      resourcePath: /source_group/{sgId}/connection_check
      description: "Check if SSH connection is available for each connection info in source group. Show each status by returning connection info list."
    Import-Software:
      method: post
      resourcePath: /source_group/{sgId}/connection_info/{connId}/import/software
      description: "Import the software information."
    Get-Software-Info:
      method: get
      resourcePath: /source_group/{sgId}/connection_info/{connId}/software
      description: "Get the software information of the connection information."


  cm-cicada:
    Get-Task-Component-By-Name:
      method: get
      resourcePath: /task_component/name/{tcName}
      description: "Get the task component by name."
    Get-Task:
      method: get
      resourcePath: /workflow/{wfId}/task/{taskId}
      description: "Get the task."
    Get-Task-Component:
      method: get
      resourcePath: /task_component/{tcId}
      description: "Get the task component."
    Update-Task-Component:
      method: put
      resourcePath: /task_component/{tcId}
      description: "Update the task component."
    Delete-Task-Component:
      method: delete
      resourcePath: /task_component/{tcId}
      description: "Delete the task component."
    List-Workflow:
      method: get
      resourcePath: /workflow
      description: "Get a workflow list."
    Create-Workflow:
      method: post
      resourcePath: /workflow
      description: "Create a workflow."
    Get-Workflow:
      method: get
      resourcePath: /workflow/{wfId}
      description: "Get the workflow."
    Update-Workflow:
      method: put
      resourcePath: /workflow/{wfId}
      description: "Update the workflow content."
    Delete-Workflow:
      method: delete
      resourcePath: /workflow/{wfId}
      description: "Delete the workflow."
    Get-Workflow-Template-By-Name:
      method: get
      resourcePath: /workflow_template/name/{wfName}
      description: "Get the workflow template by name."
    List-Task:
      method: get
      resourcePath: /workflow/{wfId}/task
      description: "Get a task list of the workflow."
    List-Task-Group:
      method: get
      resourcePath: /workflow/{wfId}/task_group
      description: "Get a task group list of the workflow."
    Health-Check-Readyz:
      method: get
      resourcePath: /readyz
      description: "Check Cicada is ready"
    Get-Task-Directly:
      method: get
      resourcePath: /task/{taskId}
      description: "Get the task directly."
    List-Task-Component:
      method: get
      resourcePath: /task_component
      description: "Get a list of task component."
    Create-Task-Component:
      method: post
      resourcePath: /task_component
      description: "Register the task component."
    Get-Task-Group-Directly:
      method: get
      resourcePath: /task_group/{tgId}
      description: "Get the task group directly."
    Get-Workflow-By-Name:
      method: get
      resourcePath: /workflow/name/{wfName}
      description: "Get the workflow by name."
    Run-Workflow:
      method: post
      resourcePath: /workflow/{wfId}/run
      description: "Run the workflow."
    List-Task-From-Task-Group:
      method: get
      resourcePath: /workflow/{wfId}/task_group/{tgId}/task
      description: "Get a task list from the task group."
    Get-Task-From-Task-Group:
      method: get
      resourcePath: /workflow/{wfId}/task_group/{tgId}/task/{taskId}
      description: "Get the task from the task group."
    List-Workflow-Template:
      method: get
      resourcePath: /workflow_template
      description: "Get a list of workflow template."
    Get-Task-Group:
      method: get
      resourcePath: /workflow/{wfId}/task_group/{tgId}
      description: "Get the task group."
    Get-Workflow-Template:
      method: get
      resourcePath: /workflow_template/{wftId}
      description: "Get the workflow template."


  cm-grasshopper:
    Health-Check-Readyz:
      method: get
      resourcePath: /readyz
      description: "Check Grasshopper is ready"
    Get-Execution-List:
      method: post
      resourcePath: /software/execution_list
      description: "Get software migration execution list."
    Install-Software:
      method: post
      resourcePath: /software/install
      description: "Install pieces of software to target."
    Register-Software:
      method: post
      resourcePath: /software/register
      description: "Register the software.<br><br>[JSON Body Example]<br>{\"architecture\":\"x86_64\",\"install_type\":\"ansible\",\"match_names\":[\"telegraf\"],\"name\":\"telegraf\",\"os\":\"Ubuntu\",\"os_version\":\"22.04\",\"version\":\"1.0\"}"
    Delete-Software:
      method: delete
      resourcePath: /software/{softwareId}
      description: "Delete the software."


