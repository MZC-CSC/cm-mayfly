#version: "3.3"
# docker image : https://hub.docker.com/u/cloudbaristaorg
services:
# The priority used by Compose to choose which env var value to use:
# 1. Compose file
# 2. Shell environment variables
# 3. Environment file
# 4. Dockerfile
# 5. Variable is not defined


  # etcd
  # used by cb-tumblebug
  # See https://github.com/cloud-barista/cb-tumblebug/blob/main/docker-compose.yaml
  etcd:
    image: gcr.io/etcd-development/etcd:v3.5.14
    container_name: etcd
    ports:
      - target: 2379       # Port assinged to etcd in the container
        published: 2379   # Port to be exposed to the host
        protocol: tcp     # Protocol of the port     
      - target: 2380      # Port assinged to etcd in the container
        published: 2380   # Port to be exposed to the host
        protocol: tcp     # Protocol of the port
    volumes: 
      - ./data/etcd/data:/etcd-data
    entrypoint: /usr/local/bin/etcd
    command:
      - --name
      - s1
      - --data-dir
      - /etcd-data
      - --listen-client-urls
      - http://0.0.0.0:2379
      - --advertise-client-urls
      - http://0.0.0.0:2379
      - --listen-peer-urls
      - http://0.0.0.0:2380
      - --initial-advertise-peer-urls
      - http://0.0.0.0:2380
      - --initial-cluster
      - s1=http://0.0.0.0:2380
      - --initial-cluster-token
      - tkn
      - --initial-cluster-state
      - new
      - --log-level
      - info
      - --logger
      - zap
      - --log-outputs
      - stderr
      - --auth-token
      - simple
    healthcheck: # for etcd
      test: [ "CMD", "/usr/local/bin/etcd", "--version"]
      interval: 1m
      timeout: 5s
      retries: 3
      start_period: 10s

  # etcd-conf
  # ./conf/etcd folder : https://github.com/cloud-barista/cb-tumblebug/tree/main/scripts/etcd
  # See https://github.com/cloud-barista/cb-tumblebug/blob/main/docker-compose.yaml
  etcd-conf:
    image: alpine:latest
    container_name: etcd-conf
    depends_on:
      - etcd
    volumes:
      - ./conf/etcd/:/scripts/etcd/
    environment:
      - ETCD_VERSION_TAG=v3.5.14
      - ETCD_ENDPOINTS=http://etcd:2379
      - ETCD_PATH=/tmp/etcd-download-test
      - ETCD_AUTH_ENABLED=true
      - ETCD_ROOT_PASSWORD=default
      - ETCD_ADMIN_USERNAME=default
      - ETCD_ADMIN_PASSWORD=default
    command: sh -c "sh /scripts/etcd/etcd-conf.sh"
    healthcheck: # for etcd-conf
      test: ["CMD", "test", "-f", "/tmp/healthcheck"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # CB-Spider
  # https://github.com/cloud-barista/cb-spider/wiki/Docker-based-Start-Guide
  # https://hub.docker.com/r/cloudbaristaorg/cb-spider
  cb-spider:
    image: cloudbaristaorg/cb-spider:0.9.1
    container_name: cb-spider
    platform: linux/amd64
    ports:
      - "0.0.0.0:1024:1024"
      - "0.0.0.0:2048:2048"
    networks:
      - spider_net
    volumes:
      - ./tool/mayfly:/app/tool/mayfly
      - ./conf/cb-spider/:/root/go/src/github.com/cloud-barista/cb-spider/conf/
      - ./data/cb-spider/meta_db/:/root/go/src/github.com/cloud-barista/cb-spider/meta_db/
      - ./data/cb-spider/log/:/root/go/src/github.com/cloud-barista/cb-spider/log/
    environment:
      - PLUGIN_SW=OFF
      # if you leave these values empty, REST Auth will be disabled.
      - API_USERNAME=
      - API_PASSWORD=
      #- SERVER_ADDRESS=localhost
      #- SPIDER_LOG_LEVEL=error
      #- SPIDER_HISCALL_LOG_LEVEL=error
      #- SERVICE_ADDRESS=
      #- ID_TRANSFORM_MODE=ON ##????? @todo : tumblebug에 있는 환경 변수인데 용도 파악 필요
    healthcheck: # for CB-Spider
      test: [ "CMD", "/app/tool/mayfly", "rest", "get", "http://cb-spider:1024/spider/readyz" ]
      #test: [ "CMD", "curl", "-f", "http://cb-spider:1024/spider/readyz" ]
      interval: 1m
      timeout: 5s
      retries: 3
      start_period: 10s


  # CB-Tumblebug
  # https://github.com/cloud-barista/cb-tumblebug/blob/main/scripts/runTumblebug.sh
  # https://hub.docker.com/r/cloudbaristaorg/cb-tumblebug
  # See https://github.com/cloud-barista/cb-tumblebug/blob/main/docker-compose.yaml
  cb-tumblebug:
    image: cloudbaristaorg/cb-tumblebug:0.9.0
    container_name: cb-tumblebug
    platform: linux/amd64
    ports:
      - "0.0.0.0:1323:1323"
      #- "0.0.0.0:50252:50252"
    networks:
      - spider_net
      - default
    depends_on:
      - cb-spider
      - etcd-conf
    volumes:
      - ./tool/mayfly:/app/tool/mayfly
      - ./conf/cb-tumblebug/:/app/conf/
      - ./data/cb-tumblebug/meta_db/:/app/meta_db/
      - ./data/cb-tumblebug/log/:/app/log/
    environment:
      # - TB_ROOT_PATH=/app
      - TB_SPIDER_REST_URL=http://cb-spider:1024/spider
      #- TB_DRAGONFLY_REST_URL=http://cb-dragonfly:9090/dragonfly
      # - TB_SQLITE_URL=localhost:3306 
      # - TB_SQLITE_DATABASE=cb_tumblebug 
      # - TB_SQLITE_USER=cb_tumblebug 
      # - TB_SQLITE_PASSWORD=cb_tumblebug 
      - TB_ETCD_ENDPOINTS=http://etcd:2379
      # - TB_ETCD_AUTH_ENABLED=true
      # - TB_ETCD_USERNAME=default
      # - TB_ETCD_PASSWORD=default
      # - TB_ALLOW_ORIGINS=*
      # - TB_AUTH_ENABLED=true
      # - TB_API_USERNAME=default
      # - TB_API_PASSWORD=default
      # - TB_AUTOCONTROL_DURATION_MS=10000
      - TB_SELF_ENDPOINT=localhost:1323
      # - TB_DEFAULT_NAMESPACE=ns01
      # - TB_DEFAULT_CREDENTIALHOLDER=admin
      # - TB_LOGFILE_PATH=/app/log/tumblebug.log
      # - TB_LOGFILE_MAXSIZE=10
      # - TB_LOGFILE_MAXBACKUPS=3
      # - TB_LOGFILE_MAXAGE=30
      # - TB_LOGFILE_COMPRESS=false
      # - TB_LOGLEVEL=debug
      # - TB_LOGWRITER=both
      # - TB_NODE_ENV=development
    healthcheck: # for CB-Tumblebug
      test: [ "CMD", "/app/tool/mayfly", "rest", "get", "http://cb-tumblebug:1323/tumblebug/readyz" ]
      #test: [ "CMD", "curl", "-f", "http://cb-tumblebug:1323/tumblebug/readyz" ]
      interval: 1m
      timeout: 5s
      retries: 3
      start_period: 10s


  # cb-mapui
  # used by cb-tumblebug
  # See https://github.com/cloud-barista/cb-tumblebug/blob/main/docker-compose.yaml
  cb-mapui:
    image: cloudbaristaorg/cb-mapui:0.9.0
    container_name: cb-mapui
    ports:
      - target: 1324
        published: 1324
        protocol: tcp
    # depends_on:
    #   - cb-tumblebug
    healthcheck: # for cb-mapui
      #test: ["CMD", "nc", "-vz", "127.0.0.1", "1324"]
      test: ["CMD", "nc", "-vz", "cb-mapui", "1324"]
      interval: 1m
      timeout: 5s
      retries: 3
      start_period: 10s

  # cm-beetle
  # https://github.com/cloud-barista/cm-beetle/discussions/73
  # https://hub.docker.com/r/cloudbaristaorg/cm-beetle
  # See https://github.com/cloud-barista/cm-beetle/blob/main/deployments/docker-compose/docker-compose.yaml#L156
  cm-beetle:
    #image: cloudbaristaorg/cm-beetle:0.2.0
    image: cloudbaristaorg/cm-beetle:edge
    container_name: cm-beetle
    platform: linux/amd64
    ports:
      - target: 8056
        published: 8056
        protocol: tcp
    depends_on:
      - cb-tumblebug
    volumes:
      - ./tool/mayfly:/app/tool/mayfly
      - ./conf/cm-beetle/conf/:/app/conf/
      - ./data/cm-beetle/log/:/app/log/
    environment:
      # - BEETLE_ROOT=/app
      # - BEETLE_CBSTORE_ROOT=/app
      # - BEETLE_CBLOG_ROOT=/app
      - BEETLE_TUMBLEBUG_ENDPOINT=http://cb-tumblebug:1323
      # - BEETLE_LOGFILE_PATH=/app/log/beetle.log
      # - BEETLE_LOGFILE_MAXSIZE=10
      # - BEETLE_LOGFILE_MAXBACKUPS=3
      # - BEETLE_LOGFILE_MAXAGE=30
      # - BEETLE_LOGFILE_COMPRESS=false
      # - BEETLE_LOGLEVEL=debug
      # - BEETLE_LOGWRITER=both
      # - BEETLE_NODE_ENV=development
      # - BEETLE_SQLITE_URL=localhost:3306
      # - BEETLE_SQLITE_DATABASE=cm_beetle
      # - BEETLE_SQLITE_USER=cm_beetle
      # - BEETLE_SQLITE_PASSWORD=cm_beetle
      # - BEETLE_API_ALLOW_ORIGINS=*
      # - BEETLE_API_AUTH_ENABLED=true
      # - BEETLE_API_USERNAME=default
      # - BEETLE_API_PASSWORD=default
      # - BEETLE_AUTOCONTROL_DURATION_MS=10000
      - BEETLE_SELF_ENDPOINT=localhost:8056
    healthcheck: # for CM-Beetle
      test: [ "CMD", "/app/tool/mayfly", "rest", "get", "http://cm-beetle:8056/beetle/readyz" ]
      #test: [ "CMD", "curl", "-f", "http://localhost:1323/beetle/readyz" ]
      interval: 1m
      timeout: 5s
      retries: 3
      start_period: 10s


  # cm-butterfly
  # https://github.com/cloud-barista/cm-butterfly
  # https://hub.docker.com/r/cloudbaristaorg/cm-butterfly
  cm-butterfly:
    image: cloudbaristaorg/cm-butterfly:0.2.0
    container_name: cm-butterfly
    platform: linux/amd64
    restart: always
    ports:
      - "1234:1234"
    depends_on:
      - cm-beetle
    volumes:
      #- ./conf/cm-cicada/conf:/root/.cm-cicada/conf:rw
      - ./conf/cm-butterfly/conf:/app/conf:rw
    environment:
      - BEETLE_URL=http://cm-beetle:8056/beetle
      - HONEYBEE_URL=http://cm-honeybee:8081/honeybee
      - CICADA_URL=http://cm-cicada:8083/cicada
      - TUMBLE_URL=http://cb-tumblebug:1323/tumblebug
      - SPIDER_URL=http://cb-spider:1024/spider
      #- LoginUser=admin
      #- LoginEmail=admin
      #- LoginPassword=admin
      #- API_USERNAME=default
      #- API_PASSWORD=default


  # @TODO - **Airflow 등 연계 시스템 필요함**
  # cm-honeybee
  # https://github.com/cloud-barista/cm-honeybee/tree/main/server
  # https://hub.docker.com/r/cloudbaristaorg/cm-honeybee
  # See https://github.com/cloud-barista/cm-honeybee/blob/main/server/docker-compose.yaml
  cm-honeybee:
    #image: cloudbaristaorg/cm-honeybee:0.2.0
    image: cloudbaristaorg/cm-honeybee:edge
    container_name: cm-honeybee
    platform: linux/amd64
    ports:
      # 8081 : Server / 8082 : Agent
      - "8081:8081"
      #- "8082:8082"
    depends_on:
      - cm-honeybee-agent
    volumes:
      - ./tool/mayfly:/app/tool/mayfly
      - ./data/cm-honeybee/:/root/.cm-honeybee/:rw
    healthcheck:
      test: [ "CMD", "/app/tool/mayfly", "rest", "get", "http://cm-honeybee:8081/honeybee/readyz" ]
      interval: 1m
      timeout: 5s
      retries: 3
      start_period: 10s
    #network_mode: "host"


  # **도커 이미지 필요 함**
  # cm-honeybee Agent
  # https://github.com/cloud-barista/cm-honeybee/tree/main/agent
  # https://hub.docker.com/r/cloudbaristaorg/cm-honeybee
  # See https://github.com/cloud-barista/cm-honeybee/blob/main/agent/docker-compose.yaml
  cm-honeybee-agent:
    #image: cloudbaristaorg/cm-honeybee-agent:0.2.0
    #image: cm-honeybee-agent:latest
    image: dev4unet/cm-honeybee-agent:0.2.0
    container_name: cm-honeybee-agent    
    restart: always
    privileged: true
    ports:
      - "8082:8082"
    volumes:
      - ./tool/mayfly:/app/tool/mayfly
      - ./data/cm-honeybee-agent/:/root/.cm-honeybee-agent:rw
      - /etc/:/etc/:ro
      - /usr/lib/os-release:/usr/lib/os-release:ro
      - /var/:/var/:rw
      - /run/:/run/:rw
    healthcheck:
      test: [ "CMD", "/app/tool/mayfly", "rest", "get", "http://cm-honeybee-agent:8082/honeybee-agent/readyz" ]
      interval: 1m
      timeout: 5s
      retries: 3
      start_period: 10s
    #network_mode: "host"


  # cm-cicada
  # https://github.com/cloud-barista/cm-cicada
  # https://hub.docker.com/r/cloudbaristaorg/cm-cicada
  cm-cicada:
    #image: cloudbaristaorg/cm-cicada:0.2.0
    image: cloudbaristaorg/cm-cicada:edge
    container_name: cm-cicada
    restart: always
    ports:
      - "8083:8083"
    volumes:
      #- ./conf/cm-cicada/conf:/root/.cm-cicada/conf:rw
      - ./tool/mayfly:/app/tool/mayfly
      - ./conf/cm-cicada/conf:/conf:rw
      - ./conf/cm-cicada/_airflow:/_airflow:rw
      - ./data/cm-cicada/CM-CICADA.db:/CM-CICADA.db:rw
    healthcheck:
      test: [ "CMD", "/app/tool/mayfly", "rest", "get", "http://cm-cicada:8083/cicada/readyz" ]
      interval: 1m
      timeout: 5s
      retries: 3
      start_period: 10s
    #network_mode: "host"


  # airflow-redis
  # used by cm-cicada
  # https://github.com/cloud-barista/cm-cicada/blob/main/_airflow/docker-compose.yml
  airflow-redis:
    container_name: airflow-redis
    image: redis:7.2-alpine
    command: redis-server --requirepass airflow_pass --port 6379
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 50

  # airflow-mysql
  # used by cm-cicada
  # https://github.com/cloud-barista/cm-cicada/blob/main/_airflow/docker-compose.yml
  # ./conf/_airflow/create_airflow_db.sql : https://github.com/cloud-barista/cm-cicada/blob/main/_airflow/create_airflow_db.sql
  airflow-mysql:
      container_name: airflow-mysql
      image: mysql:8.0-debian
      cap_add:
        - SYS_NICE
      restart: always
      ports:
        - "3306:3306"
      environment:
          - MYSQL_ROOT_PASSWORD=airflow_pass
          - MYSQL_USER=airflow
          - MYSQL_PASSWORD=airflow_pass
          - MYSQL_DATABASE=airflow
      volumes:
          - ./conf/cm-cicada/_airflow/create_airflow_db.sql:/docker-entrypoint-initdb.d/create_airflow_db.sql
          - ./data/cm-cicada/db_data:/var/lib/mysql

  # airflow-server
  # used by cm-cicada
  # See https://github.com/cloud-barista/cm-cicada/blob/main/_airflow/docker-compose.yml
  airflow-server:
      build:
          context: ./conf/cm-cicada/_airflow ## build Docker file location
      container_name: airflow-server
      image: airflow-server:2.9.1
      restart: always
      ports:
          - "5555:5555"
          - "8080:8080"
      command: >
          /bin/bash -c "
              # Wait for MySQL
              sleep 10

              # Clean up pid
              rm -f airflow-webserver.pid

              # Set up metadata database
              airflow db upgrade

              # Create default user
              airflow users create --username airflow --password airflow_pass --email ish@innogrid.com --firstname SuHyeon --lastname Im --role Admin

              # Start airflow
              airflow scheduler &
              airflow celery worker &
              airflow celery flower &
              airflow webserver

              # Keep the server on no matter what
              sleep infinity
          "
      depends_on:
          - airflow-mysql
      volumes:
              - ./conf/cm-cicada/_airflow/airflow-home:/usr/local/airflow
              - /var/run/docker.sock:/var/run/docker.sock

  # cm-grasshopper
  # https://github.com/cloud-barista/cm-grasshopper
  # https://hub.docker.com/r/cloudbaristaorg/cm-grasshopper
  # See https://github.com/cloud-barista/cm-grasshopper/blob/main/docker-compose.yaml
  cm-grasshopper:
    #image: cloudbaristaorg/cm-grasshopper:0.2.0
    image: cloudbaristaorg/cm-grasshopper:edge
    container_name: cm-grasshopper
    restart: always
    ports:
      - "8084:8084"
    depends_on:
      - cm-honeybee
    volumes:
      - ./tool/mayfly:/app/tool/mayfly
      - ./conf/cm-grasshopper/conf:/root/.cm-grasshopper/conf
      #- ./data/cm-honeybee/:/root/.cm-grasshopper/:ro
      - ./data/cm-honeybee/:/root/.cm-grasshopper/honeybee:ro
      - ./data/cm-grasshopper/log:/root/.cm-grasshopper/log:rw
      #- ./conf/cm-grasshopper/honeybee.key:/root/.cm-grasshopper/honeybee.key:ro
      #- ./data/cm-honeybee/honeybee.key:/root/.cm-grasshopper/honeybee.key:ro
      - ./data/cm-grasshopper/software_temp:/software_temp:rw
      - ./data/cm-grasshopper/software_log:/software_log:rw
      - ./data/cm-grasshopper/playbook:/playbook/:rw
    command: >
      /bin/sh -c "
        if [ ! -f /root/.cm-grasshopper/honeybee/honeybee.key ]; then
          echo 'honeybee.key not found, exiting...';
          exit 1;
        else
          cp /root/.cm-grasshopper/honeybee/honeybee.key /root/.cm-grasshopper/ && echo 'Finished copying the honeybee.key file.';
          /cm-grasshopper;
        fi
      "
    healthcheck:
      test: [ "CMD", "/app/tool/mayfly", "rest", "get", "http://cm-grasshopper:8084/grasshopper/readyz" ]
      interval: 1m
      timeout: 5s
      retries: 3
      start_period: 10s
    #network_mode: "host"


  # cm-ant
  # https://github.com/cloud-barista/cm-ant
  # https://hub.docker.com/r/cloudbaristaorg/cm-ant
  cm-ant:
    container_name: cm-ant
    image: cloudbaristaorg/cm-ant:0.2.1
    platform: linux/amd64
    ports:
        - 8880:8880
    #networks:
    #  - default
    #  - cm-ant-db-network
    depends_on:
      # cb-tumblebug:
      #   condition: service_healthy
      ant-postgres:
        condition: service_healthy
    environment:
      - ANT_SPIDER_HOST=http://cb-spider
      - ANT_SPIDER_PORT=1024
      - ANT_TUMBLEBUG_HOST=http://cb-tumblebug
      - ANT_TUMBLEBUG_PORT=1323
      - ANT_DATABASE_HOST=ant-postgres
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://cm-ant:8880/ant/api/v1/readyz" ]
      interval: 1m
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped


  # ant-postgres
  # used by cm-ant
  ant-postgres:
    image: timescale/timescaledb:latest-pg16
    container_name: ant-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=cm-ant-user
      - POSTGRES_PASSWORD=cm-ant-secret
      - POSTGRES_DB=cm-ant-db
    #networks:
    #  - cm-ant-db-network
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "cm-ant-user", "-d", "cm-ant-db" ]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  cm-mayfly:
  #   image: cloudbaristaorg/cm-mayfly:v0.1.0
    image: dev4unet/cm-mayfly:v0.2.0
    container_name: cm-mayfly
    platform: linux/amd64
    stdin_open: true
    tty: true
    networks:
      - spider_net
      - default


# cm-damselfly
# Does not currently provide a docker image.

# cm-centipede
# Does not currently provide a docker image.
# Probably integrated into cm-grasshopper

networks:
  spider_net: #Network for cb-spider isolation
  #cm-ant-db-network: #Network for cm-ant database isolation
